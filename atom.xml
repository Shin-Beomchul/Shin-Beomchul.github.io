<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GOD-BEOM Blog</title>
  
  <subtitle>GOD BEOM ~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shin-beomchul.github.io/"/>
  <updated>2018-11-06T08:57:17.996Z</updated>
  <id>https://shin-beomchul.github.io/</id>
  
  <author>
    <name>Beom Chul</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gitPage-lyion테마적용</title>
    <link href="https://shin-beomchul.github.io/2018/11/06/hex-etc/gitPage-lyion%ED%85%8C%EB%A7%88%EC%A0%81%EC%9A%A9/"/>
    <id>https://shin-beomchul.github.io/2018/11/06/hex-etc/gitPage-lyion테마적용/</id>
    <published>2018-11-06T08:44:41.000Z</published>
    <updated>2018-11-06T08:57:17.996Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-theme-ylion"><a href="#hexo-theme-ylion" class="headerlink" title="hexo-theme-ylion"></a>hexo-theme-ylion</h1><p> 테마 적용하기 Ctrl+ V From lyion Git</p><p><a href="http://blog.geekaholic.cn" target="_blank" rel="noopener">미리보기</a></p><p><img src="http://olpvawdcl.bkt.clouddn.com/hexo-theme-ylion.jpg" alt="hexo-theme-ylion"></p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li style="list-style: none"><input type="checkbox" checked> jQuery Free，Vanilla javascript로 작성</li><li style="list-style: none"><input type="checkbox" checked> 강력한 css3 애니메이션</li><li style="list-style: none"><input type="checkbox" checked> 블로그 글이 오래되었을 경우 알림</li><li style="list-style: none"><input type="checkbox" checked> 블로그 글 상단 고정 지원</li><li style="list-style: none"><input type="checkbox" checked> 사이트 공지 기능</li><li style="list-style: none"><input type="checkbox" checked> 강화된 사이트 내 검색</li><li style="list-style: none"><input type="checkbox" checked> 사이트 이미지 Lazyload 지원</li><li style="list-style: none"><input type="checkbox" checked> 인기있는 통계위젯인 leancloud 사용</li><li style="list-style: none"><input type="checkbox" checked> 더욱 강력해진 사용자 커스터마이징</li><li style="list-style: none"><input type="checkbox" checked> 전용 이미지가 존재하지 않는 테마</li><li style="list-style: none"><input type="checkbox" checked> 반응형 테마</li><li style="list-style: none"><input type="checkbox" checked> gitment 통합</li><li style="list-style: none"><input type="checkbox" checked> 다국어 지원</li><li style="list-style: none"><input type="checkbox" checked> （더 이상 요약을 못하겠어. 너가 찾아주길 바래~）</li></ul><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li style="list-style: none"><input type="checkbox" checked> <a href="http://blog.geekaholic.cn/tags/%E4%B8%BB%E9%A2%98%E5%88%B6%E4%BD%9C/" target="_blank" rel="noopener">Hexo 튜토리얼 작성</a></li><li style="list-style: none"><input type="checkbox"> <del>더 많은 최적화 작업</del>（==）</li><li style="list-style: none"><input type="checkbox"> <del>post 분류 확장 개발 가능</del></li><li style="list-style: none"><input type="checkbox"> Javascript 모듈화</li><li style="list-style: none"><input type="checkbox"> <del>댓글 기능을 만들려다</del> <a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">gitment</a>로 대체</li><li style="list-style: none"><input type="checkbox" checked> 수학공식 지원 / updated: 2017/2/19，<a href="http://blog.geekaholic.cn/2017/02/19/mathjax/" target="_blank" rel="noopener">설몇&amp;주의사항</a></li><li style="list-style: none"><input type="checkbox"> 더욱 편리해진 번역과 다국어 사용 기능 튜토리얼</li><li style="list-style: none"><input type="checkbox"> 그리고 너가 만들어줘…:monkey:</li></ul><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><p>:warning:<br><strong>이전에 <code>Hexo 2.x</code>를 사용했다면 알 수없는 오류를 피하기 위해 데이터를 백업하거나 새로운 블로그 디렉토리를 만드세요</strong></p><h3 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h3><p><code>Node.js</code> 환경, <code>Git</code> 환경과 <code>Hexo</code>가 필요합니다.</p><p>만약 아직 <code>Hexo</code>를 설치하지 않았거나 이해하지 못한다면 <a href="https://hexo.io/ko/docs/index.html" target="_blank" rel="noopener">공식 튜토리얼</a>을 참고하세요</p><h3 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h3><p><strong>hexo-theme-ylion</strong>은 <code>ejs</code>와 <code>Less</code>를 사용했습니다. 이는 공식 플러그인을 기반으로 한 기능 개발의 필수 요소입니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## ejs의 버전문제에 주의하십시오([issue](https://github.com/GeekaholicLin/hexo-theme-ylion/issues/5) #5)</span></span><br><span class="line">npm install hexo-renderer-ejs hexo-renderer-less hexo-generator-feed hexo-generator-sitemap hexo-deployer-git hexo-util ejs@^1.0.0 moment utils-merge --save</span><br></pre></td></tr></table></figure><h3 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h3><p>테마를 다운로드 하는 방법은 두가지가 있습니다.<br><code>*.zip</code> 파일을 다운로드하거나 <code>git</code>을 사용하십시오.<br>어떤 방식이든 다운로드 한 파일의 디렉토리를 아래와 같이 블로그 사이트의 landscape 와 동등한 위치에 넣으십시오</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── landscape</span><br><span class="line">└── ylion</span><br></pre></td></tr></table></figure><h3 id="Configure"><a href="#Configure" class="headerlink" title="Configure"></a>Configure</h3><p>설정 부분은 테마 설정과 웹사이트 설정으로 나누었습니다.<br>주로 봐야할 부분은 테마 설정 입니다</p><h4 id="Theme-Configure"><a href="#Theme-Configure" class="headerlink" title="Theme Configure"></a>Theme Configure</h4><p>각 설정 항목은 주석 형식으로 설명되어 있습니다.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># layout</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## menu -- 탐색메뉴 표시&#123;[@page:이름/*다국어지원*/,@url:주소,@icon:표시아이콘],[...]&#125;</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">- page:</span> <span class="string">home</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">icon:</span> <span class="string">fa-home</span></span><br><span class="line"><span class="attr">- page:</span> <span class="string">rss</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">/atom.xml</span></span><br><span class="line"><span class="attr">icon:</span> <span class="string">fa-rss</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## favicon -- 사이트 파비콘 위치&#123;@favicon&#125;</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## rss --rss파일 위치&#123;@rss&#125;</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## widgets -- 사이트 왼측에 위치하는 위젯&#123;@widgets:[notification,category,archive,popular,tagcloud,friends]&#125;</span></span><br><span class="line"><span class="attr">widgets:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">notification</span> <span class="comment">## 상단 공지</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">category</span> <span class="comment">## 카테고리</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">archive</span> <span class="comment">## 아카이브</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">popular</span> <span class="comment">## 인기있는 문서</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">tagcloud</span> <span class="comment">## 태그 목록</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">friends</span> <span class="comment">## 이웃 링크</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## widgets settings</span></span><br><span class="line"><span class="comment">### notification config --사이트 상단 공지에 대한 설정. HTML과 plain text 지원</span></span><br><span class="line"><span class="attr">notification:</span> <span class="string">|-</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;p&gt;ylion</span> <span class="string">테마</span> <span class="string">v0.0.0버전</span> <span class="string">출시</span> <span class="string">예정，기다려주세요~！</span></span><br><span class="line"><span class="string">테마</span> <span class="string">제작자：&lt;a</span> <span class="string">href="https://github.com/GeekaholicLin"</span></span><br><span class="line"><span class="string">title="fork</span> <span class="string">me"</span> <span class="string">target="_blank"&gt;Geekaholic&lt;/a&gt;&lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### categories-list config --카테고리 설정&#123;@cate_config:&#123;@show_count:숫자 표시여부，@show_current: 현재 카테고리 하이라이트 여부&#125;&#125;</span></span><br><span class="line"><span class="attr">cate_config:</span></span><br><span class="line"><span class="attr">show_count:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">show_current:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### archives-list config</span></span><br><span class="line"><span class="comment">### 아카이브 설정&#123;@arch_config:/*참고 매개변수：https://hexo.io/ko/docs/helpers.html#list-archives*/&#125;</span></span><br><span class="line"><span class="attr">arch_config:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">'monthly'</span></span><br><span class="line"><span class="attr">show_count:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">order:</span> <span class="bullet">-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### tagcloud config</span></span><br><span class="line"><span class="comment">### 태그 목록 설정&#123;@tagcloud_config:/*https://hexo.io/ko/docs/helpers.html#tagcloud*/&#125;</span></span><br><span class="line"><span class="attr">tagcloud_config:</span></span><br><span class="line"><span class="attr">min_font:</span> <span class="number">0.14</span></span><br><span class="line"><span class="attr">max_font:</span> <span class="number">0.2</span></span><br><span class="line"><span class="attr">unit:</span> <span class="string">rem</span></span><br><span class="line"><span class="attr">amount:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">color:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">orderby:</span> <span class="string">'count'</span></span><br><span class="line"><span class="attr">start_color:</span> <span class="string">'#6699cc'</span></span><br><span class="line"><span class="attr">end_color:</span> <span class="string">'#0A407C'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### friends' links settings</span></span><br><span class="line"><span class="comment">### 이웃 링크:&#123;@links:[,,,]&#125;</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">테마</span> <span class="string">제작자:</span> <span class="attr">http://geekaholiclin.github.io</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># content</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## show top posts or not</span></span><br><span class="line"><span class="comment">## 블로그 글 상단 고정 기능 사용여부</span></span><br><span class="line"><span class="comment">## 사용할 경우 post의 front-matter에 `top`필드을 추가하세요. `top`가 클수록 상단에 위치합니다</span></span><br><span class="line"><span class="attr">stick:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## social config</span></span><br><span class="line"><span class="comment">## social 기능 설정 &#123;@social:[url:주소,title:태그의 title,icon:표시 아이콘],[]&#125;</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">- url:</span> <span class="attr">https://www.example1.com</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">freecodecamp</span></span><br><span class="line"><span class="attr">icon:</span> <span class="string">fa-free-code-camp</span></span><br><span class="line"><span class="attr">- url:</span> <span class="attr">https://www.example2.com</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me~</span></span><br><span class="line"><span class="attr">icon:</span> <span class="string">fa-github</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## custom content config</span></span><br><span class="line"><span class="comment">## 커스텀 컨텐츠 설정</span></span><br><span class="line"><span class="comment">### append copyright when copy the text</span></span><br><span class="line"><span class="comment">### 저작권 보호 추가 &#123;@appendCopyright:&#123;enable:사용여부,triggerCopyLength:길이,appendText:추가 정보&#125;&#125;</span></span><br><span class="line"><span class="attr">appendCopyright:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">triggerCopyLength:</span> <span class="number">200</span></span><br><span class="line"><span class="attr">appendText:</span> <span class="string">'상업적인 사용은 저자에게 연락하여 권한을 얻어주시기 바랍니다. 비상업적 사용은 출처를 명확히 밝혀주시기 바랍니다 © example'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### uncategory posts meta text</span></span><br><span class="line"><span class="comment">### 디렉토리에 category가 추가되지 않으면 default로 'null'</span></span><br><span class="line"><span class="attr">noCategoryText:</span> <span class="string">'null'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### outdated browser warning</span></span><br><span class="line"><span class="comment">### 낮은 버전의 브라우저 사용시 경고 메세지</span></span><br><span class="line"><span class="attr">outdated_browser_text:</span> <span class="string">'귀하의 브라우저 버전이 너무 낮습니다. 더 나은 사용환경을 경험하시려면 브라우저 버전을 업데이트 하시거나 IE Edge, Chrome, Firefox, Safari 등과 같은 최신 브라우저를 사용하십시오'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### outdated post warning</span></span><br><span class="line"><span class="comment">### 블로그 글 만료 기능 &#123;@warning:&#123;days:만료 일자,text:알림문자/*%d: 기간만료 일자 표시자*/&#125;&#125;</span></span><br><span class="line"><span class="attr">warning:</span></span><br><span class="line"><span class="attr">days:</span> <span class="number">300</span> <span class="comment">#default is 300 days</span></span><br><span class="line"><span class="attr">text:</span> <span class="string">'해당 문서는 %d일 전에 작성되었습니다. 내용이 최신과 달라 의심스러운 경우 댓글로 남겨주세요'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### index article excerpt</span></span><br><span class="line"><span class="comment">### 블로그 글에 사용되는 디폴트 이미지</span></span><br><span class="line"><span class="comment">### 규칙 : Front-matter 'img'에 있는 이미지 -&gt; 해당 블로그 글의 임의 이미지 -&gt; 디폴트 이미지 순으로 적용</span></span><br><span class="line"><span class="attr">defaultImgs:</span></span><br><span class="line"><span class="attr">- http:</span><span class="string">//XXXX.example.jpg</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">/img/default-1.jpg</span></span><br><span class="line"><span class="attr">excerptLength:</span> <span class="number">400</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### article meta</span></span><br><span class="line"><span class="comment">### article meta는 첫 페이지에서 보여지는 블로그 글의 내부 페이지와 아이콘 정보입니다</span></span><br><span class="line"><span class="comment">### @whichCategory 표시할 카테고리를 지정하십시오. 기본값은 마지막 카테고리 입니다. 만약 카테고리 갯수가 최대 길이를 초과한다면 마지막 한가지를 보여 줍니다</span></span><br><span class="line"><span class="attr">whichCategory:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### post footer</span></span><br><span class="line"><span class="comment">### 저자 정보 부분 설정</span></span><br><span class="line"><span class="attr">high_song:</span> <span class="string">'신나게!! &amp;#128541;'</span>  <span class="comment">### 노래를 틀어주는 문자. 이 기능이 필요하지 않다면 비우거나 제거하세요</span></span><br><span class="line"><span class="attr">author_img:</span> <span class="attr">http://example.com/author.jpg</span> <span class="comment">### 저자 아바타 주소</span></span><br><span class="line"><span class="attr">author_profile_page:</span> <span class="string">/about.html</span>  <span class="comment">### 저자의 이름을 클릭할 때 이동할 페이지</span></span><br><span class="line"><span class="attr">donate:</span></span><br><span class="line"><span class="attr">text:</span> <span class="string">'赠我一杯 &amp;#128536;'</span> <span class="comment">### 컨텐츠에 만족한 구독자가 donation을 해주는 기능을 나타내는 문자입니다. 필요하지 않다면 비우거나 제거하세요</span></span><br><span class="line"><span class="attr">img:</span> <span class="comment">### donation 이미지주소</span></span><br><span class="line"><span class="attr">- url:</span> <span class="attr">http://example.com/alipay.jpg</span></span><br><span class="line"><span class="attr">alt:</span> <span class="string">'支付宝付款'</span></span><br><span class="line"><span class="attr">- url:</span> <span class="attr">http://example.com/wechat.png</span></span><br><span class="line"><span class="attr">alt:</span> <span class="string">'微信付款'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### support html&amp;text like notification's support in this theme,</span></span><br><span class="line"><span class="comment">### but please don't use &lt;li&gt; tag</span></span><br><span class="line"><span class="comment">### 저작권 고지 텍스트, html / 텍스트 지원, &lt;li&gt; 태그 사용 불가</span></span><br><span class="line"><span class="attr">cc:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">&lt;a</span> <span class="string">href="https://creativecommons.org/licenses/by-nc-nd/3.0/"</span> <span class="string">target="_blank"&gt;</span></span><br><span class="line"><span class="string">크리에이티브</span> <span class="string">커먼즈</span> <span class="string">저작자</span> <span class="string">표시</span> <span class="bullet">-</span> <span class="string">비영리적인</span> <span class="string">용도로만</span> <span class="bullet">-</span> <span class="string">비공식</span> <span class="number">3.0</span> <span class="string">비공식</span> <span class="string">라이센스（CC</span> <span class="string">BY-NC-ND</span> <span class="number">3.0</span><span class="string">）</span></span><br><span class="line"><span class="string">&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### highlight &#123;@highlightStyle:[github,solarized-light]&#125;</span></span><br><span class="line"><span class="attr">highlightStyle:</span> <span class="string">github</span> <span class="comment">### 내장테마</span></span><br><span class="line"><span class="comment"># third party service</span></span><br><span class="line"><span class="comment"># 역자: busuanzi와 leancloud는 중국에서 사용하는 통계 사이트입니다. 한국에서의 사용은 무리가 있을 수 있으므로 별도의 번역을 하지는 않겠습니다.</span></span><br><span class="line"><span class="comment">## busuanzi --不蒜子站点总人数统计 &#123;@visits_count:&#123;enable:是否开启,icon:图标,text:显示文字/*%d为占位符*/,method:统计方式&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">visits_count:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">icon:</span> <span class="string">fa-bar-chart</span></span><br><span class="line"><span class="attr">text:</span> <span class="string">'환영합니다 %d번째 방문자님'</span></span><br><span class="line"><span class="attr">count_method:</span> <span class="string">'uv'</span> <span class="comment">### uv: 여러 게시글 확인도 하나의 count로 처리，pv: 게시글을 확인할 때 마다 방문자 수 증가</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## leancloud --- leancloud 阅读量统计</span></span><br><span class="line"><span class="comment">## &#123;@leancloud:&#123;enable:是否开启,className:创建的class,app_id:,app_key:,region:默认为中国地区,limits:热门文章显示总数&#125;&#125;</span></span><br><span class="line"><span class="attr">leancloud:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">className:</span> <span class="string">"BlogCounter"</span></span><br><span class="line"><span class="attr">app_id:</span></span><br><span class="line"><span class="attr">app_key:</span></span><br><span class="line"><span class="attr">region:</span></span><br><span class="line"><span class="attr">limits:</span> <span class="number">10</span> <span class="comment">### 若要关闭该功能，设置为0或者在配置文件上移除popular对应的widget</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## comments -- 댓글</span></span><br><span class="line"><span class="comment">### disqus</span></span><br><span class="line"><span class="attr">disqus_shortname:</span></span><br><span class="line"><span class="comment">### duoshuo</span></span><br><span class="line"><span class="attr">duoshuo_shortname:</span></span><br><span class="line"><span class="comment">### [gitment](https://github.com/imsun/gitment)</span></span><br><span class="line"><span class="attr">gitment:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">owner:</span> <span class="string">GeekaholicLin</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">geekaholiclin.github.io</span></span><br><span class="line"><span class="attr">client_id:</span> <span class="string">aa2215dfc8ee944d1205</span></span><br><span class="line"><span class="attr">client_secret:</span> <span class="number">77</span><span class="string">cd2afa5d161bc0ab04639ed81300d808c6e22b</span></span><br><span class="line"><span class="attr">labels:</span> <span class="string">"blog,gitment"</span></span><br><span class="line"><span class="attr">perPage:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">maxCommentHeight:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## analytics</span></span><br><span class="line"><span class="attr">baidu_anaylytics:</span></span><br><span class="line"><span class="attr">google_anaylytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## sitemap</span></span><br><span class="line"><span class="attr">google_vertification:</span></span><br><span class="line"><span class="attr">baidu_vertification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## mathjax</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment">### mathjax를 지원한다면 front-matter에서도 mathjax:true를 입력하세요</span></span><br><span class="line"><span class="attr">src:</span> <span class="string">//cdn.bootcss.com/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span> <span class="comment">### cdn</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cdn or local files -- cdn을 통해 관련 라이브러리를 사용합니다. github에 내장된 파일을 사용하는 대신 cdn을 사용하는 것이 좋습니다.</span></span><br><span class="line"><span class="comment">## style cdn </span></span><br><span class="line"><span class="comment">## icon -- 공식 홈페이지 주소: http://fontawesome.io/icons/</span></span><br><span class="line"><span class="attr">fontAwesome:</span> <span class="string">//cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.min.css</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## script cdn --脚本cdn</span></span><br><span class="line"><span class="comment">## leancloud -- 官网:https://leancloud.cn/</span></span><br><span class="line"><span class="attr">leancloud_src:</span> <span class="attr">http://cdn1.lncld.net/static/js/2.1.0/av-min.js</span></span><br><span class="line"><span class="comment">## busuanzi -- 官网：http://busuanzi.ibruce.info/</span></span><br><span class="line"><span class="attr">busuanzi_src:</span> <span class="string">//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># theme and site self settings</span></span><br><span class="line"><span class="attr">since:</span> <span class="number">2015</span> <span class="comment">## 사이트 제작 시점</span></span><br><span class="line"><span class="attr">robot:</span> <span class="string">'all'</span> <span class="comment">### 검색 엔진 크롤링 및 색인 생성 동작을 제어하려면 기본값은 all로 두세요. 'meta name = "robots"`또는 검색을 참조하십시오. https://support.google.com/webmasters/answer/79812?hl=ko</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">0.0</span><span class="number">.2</span> <span class="comment">### 테마 버전</span></span><br></pre></td></tr></table></figure><h4 id="Site-Configure"><a href="#Site-Configure" class="headerlink" title="Site Configure"></a>Site Configure</h4><p>사이트는 일반적으로 기본 설정으로 유지되며 테마 관련 구성에 대해서만 설명합니다.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="comment">## @per_page 첫 페이지 로딩속도를 위하여, 적절한 수치를 입력하세요</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="attr">theme:</span> <span class="string">ylion</span> <span class="comment">### theme 디렉토리의 테마 파일 이름</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### search플러그인 https://github.com/PaicHyperionDev/hexo-generator-search</span></span><br><span class="line"><span class="comment">### 사용설명은 해당 repository를 참고하세요</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">field:</span> <span class="string">all</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 코드 하이라이트</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">tab_replace:</span></span><br></pre></td></tr></table></figure><h3 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s -p 4300</span><br></pre></td></tr></table></figure><p>hexo dev server는 4300포트를 사용합니다. 브라우저에서 <code>http://localhost:4300</code>를 열어 미리보기를 하실 수 있습니다</p><p><strong>Tips:</strong></p><p>더 나은 블로그를 원한다면 <code>hexo-browsersync</code>와 <code>hexo-admin</code> 플러그인을 추천합니다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-browsersync --save</span><br><span class="line">npm install hexo-admin --save</span><br></pre></td></tr></table></figure><p><code>hexo-browsersync</code>는 모니터링을 하는데 사용합니다.<br><code>hexo-admin</code>은 Backend와 유사한 기능을 제공합니다.</p><p><code>hexo-browsersync</code>는 환경설정이 필요하지 않으며, 사용하는 server에 따라 미리보기가 바로 가능합니다.</p><p><code>hexo-admin</code>의 사용은 공식 <a href="https://github.com/jaredly/hexo-admin" target="_blank" rel="noopener">Repository</a>를 참고하세요.</p><p>마지막으로，Enjoy it!!!:kissing_heart:</p><h2 id="Languages"><a href="#Languages" class="headerlink" title="Languages"></a>Languages</h2><p>영어, 중국어 간체자와 번체자를 지원합니다.<br>다른 언어로의 번역을 환영합니다.</p><p>한국어를 추가적으로 지원합니다.</p><h2 id="Compatibility"><a href="#Compatibility" class="headerlink" title="Compatibility"></a>Compatibility</h2><p>IE9+*、Chrome、Firefox、Safari</p><p><strong>설명:</strong> IE9는 애니메이션을 제외한 기본기능만을 지원합니다. <a href="https://github.com/leancloud/javascript-sdk/issues/9" target="_blank" rel="noopener">leancloud는 통계기능을 정상적으로 사용할 수 없습니다</a></p><h2 id="Contribute"><a href="#Contribute" class="headerlink" title="Contribute"></a>Contribute</h2><p>테마의 기본적인 테스트는 통과를 했습니다. 개인적인 사용은 문제가 없습니다만 결함이 있을 수 있습니다.<br>사용 도중 버그 또는 개선사항이 있다면 언제든지 건의해 주십시오.</p><p>다양한 방식의 기여를 환영합니다. 건의사항이나 질문에 제한을 두지 않습니다.<br>코드를 수정하게 되는 경우, Fork와 PR을 기대합니다</p><p>테마가 마음에 든다면, star를 꼭 바라는건 아니지만.. :satisfied:</p><h2 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks"></a>Thanks</h2><p>중국어 번역지원 : ku.taeyeon</p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a href="/LICENSE">MIT</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hexo-theme-ylion&quot;&gt;&lt;a href=&quot;#hexo-theme-ylion&quot; class=&quot;headerlink&quot; title=&quot;hexo-theme-ylion&quot;&gt;&lt;/a&gt;hexo-theme-ylion&lt;/h1&gt;&lt;p&gt; 테마 적용하기 Ctrl+
      
    
    </summary>
    
    
      <category term="etc" scheme="https://shin-beomchul.github.io/tags/etc/"/>
    
  </entry>
  
  <entry>
    <title>SPA With cordova + Vue.js + webpack + Vuetify</title>
    <link href="https://shin-beomchul.github.io/2018/11/01/hex-cordova/cordova/"/>
    <id>https://shin-beomchul.github.io/2018/11/01/hex-cordova/cordova/</id>
    <published>2018-11-01T01:54:12.000Z</published>
    <updated>2018-11-06T07:31:32.534Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h1><ul><li>Cordova SPA App의 한계는 초기로딩 속도를 제외하고 WebApp넘어 설 수 없음(인터렉션 관점)</li><li>Native WebView App VS Cordova WebView App은 성능상 동일</li><li>SPA는 웹으로 다운받는 프로그램(Single Page == 어플리케이션)</li><li>Cordova + SPA : Single Page를 App이 가지고 있어 초기 로딩 속도가 빠름.</li><li>SPA web서비스가 이미 개발되어 있고 빠르게 App으로의 전환시 타 방법에 비해 가장 쉽다.(ReactNative, Native App)<br>단, SPA가 아니라 일반 Page요청 기반의 Web이라면 Controller부분을 App에서 개발 필요</li></ul><h1 id="Cordova-패키지-매니져-설치"><a href="#Cordova-패키지-매니져-설치" class="headerlink" title="Cordova 패키지 매니져 설치"></a>Cordova 패키지 매니져 설치</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cordova</span><br><span class="line">npm install -g vue-cli</span><br></pre></td></tr></table></figure><h1 id="프로젝트-생성"><a href="#프로젝트-생성" class="headerlink" title="프로젝트 생성"></a>프로젝트 생성</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cordova create VueApp com.beom.house</span><br><span class="line">vue init webpack VueApp com.beom.house</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result : (의미 없음)</span><br><span class="line">? Project name todo-mobile-app-cordova-vue</span><br><span class="line">? Project description cordova-with-vue</span><br><span class="line">? Author Shin BeomChul &lt;sbc0830@osstem.com&gt;</span><br><span class="line">? Vue build standalone</span><br><span class="line">? Install vue-router? Yes</span><br><span class="line">? Use ESLint to lint your code? Yes</span><br><span class="line">? Pick an ESLint preset Standard</span><br><span class="line">? Set up unit tests Yes</span><br><span class="line">? Pick a test runner jest</span><br><span class="line">? Setup e2e tests with Nightwatch? Yes</span><br><span class="line">? Should we run `npm install` for you after the project has been created? (recommended) npm</span><br><span class="line"></span><br><span class="line">running % init ....</span><br></pre></td></tr></table></figure><h1 id="www-삭제"><a href="#www-삭제" class="headerlink" title="./www 삭제"></a>./www 삭제</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd VueApp</span><br><span class="line">sudo rm -r www/*</span><br><span class="line"># Password: ************</span><br></pre></td></tr></table></figure><h1 id="VueApp-config-index-js-수정"><a href="#VueApp-config-index-js-수정" class="headerlink" title="{VueApp}/config/index.js  수정"></a>{VueApp}/config/index.js  수정</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">build: &#123;</span><br><span class="line">    // Template for index.html</span><br><span class="line">    index: path.resolve(__dirname, &apos;../www/dist/index.html&apos;),</span><br><span class="line">    // Paths</span><br><span class="line">    assetsRoot: path.resolve(__dirname, &apos;../www/dist&apos;),</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;,</span><br><span class="line">    assetsPublicPath: &apos;&apos;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="VueApp-config-xml-수정"><a href="#VueApp-config-xml-수정" class="headerlink" title="{VueApp}config.xml 수정"></a>{VueApp}config.xml 수정</h1><p>코르도바 실행 시 Vue 빌드 index로 변경.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;content src=”dist/index.html” /&gt;</span><br></pre></td></tr></table></figure></p><h1 id="npm-Build"><a href="#npm-Build" class="headerlink" title="npm Build"></a>npm Build</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h1 id="android-SDK-툴-설치"><a href="#android-SDK-툴-설치" class="headerlink" title="android SDK 툴 설치"></a>android SDK 툴 설치</h1><h1 id="플랫폼-추가"><a href="#플랫폼-추가" class="headerlink" title="플랫폼 추가"></a>플랫폼 추가</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;VueApp&#125;/cordova platform add android</span><br><span class="line">&#123;VueApp&#125;/cordova platform add ios</span><br><span class="line"> ...</span><br></pre></td></tr></table></figure><ol><li>Android</li><li>IOS</li><li>Blackberry</li><li>OSX</li><li>WebOS</li><li>Windows</li><li>Browser</li></ol><h1 id="android-gradle-CLI-설치"><a href="#android-gradle-CLI-설치" class="headerlink" title="android gradle  CLI 설치"></a>android gradle  CLI 설치</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gradle.org/install/ 참조</span><br></pre></td></tr></table></figure><h1 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova run android</span><br></pre></td></tr></table></figure><h1 id="자-이제-수정하고-반영해보자"><a href="#자-이제-수정하고-반영해보자" class="headerlink" title="자 이제 수정하고 반영해보자."></a>자 이제 수정하고 반영해보자.</h1><ul><li>Step1. Vue.js 수정.</li><li>Step2. npm run build </li><li>Step3. cordova run android </li></ul><h1 id="Vue빌드-amp-App-Install-쉘스크립트-추가"><a href="#Vue빌드-amp-App-Install-쉘스크립트-추가" class="headerlink" title="+  Vue빌드 &amp; App Install 쉘스크립트 추가."></a>+  Vue빌드 &amp; App Install 쉘스크립트 추가.</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo sh rr.sh a // android</span><br><span class="line">sudo sh rr.sh i // ios</span><br></pre></td></tr></table></figure><h1 id="삽질-꿀팁"><a href="#삽질-꿀팁" class="headerlink" title="#삽질 꿀팁"></a>#삽질 꿀팁</h1><h1 id="CodePush-앱을-웹-처럼-업데이트-ThinClient같지만-리치Client"><a href="#CodePush-앱을-웹-처럼-업데이트-ThinClient같지만-리치Client" class="headerlink" title="CodePush 앱을 웹 처럼 업데이트, ThinClient같지만 리치Client ,"></a>CodePush 앱을 웹 처럼 업데이트, ThinClient같지만 리치Client ,</h1><ul><li>git nordnet/hot-code-push 곧 서비스 중지 - (18.09.30 발표)</li><li>괜찮아 MS가 유지함<br><a href="https://docs.microsoft.com/en-us/appcenter/distribution/codepush/" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/appcenter/distribution/codepush/</a>  </li></ul><h1 id="ignore-대상"><a href="#ignore-대상" class="headerlink" title="ignore 대상"></a>ignore 대상</h1><p>: node_modules ==  npm run build<br>: platforms == 땡겨받고 $ cordovasub platform add {yourFlatform}</p><h1 id="live-서버-npm-run-dev"><a href="#live-서버-npm-run-dev" class="headerlink" title="live 서버 :  npm run dev"></a>live 서버 :  npm run dev</h1><p>이렇게 개발하다가 이제 됐나… 싶으면  </p><ul><li>Step1. npm run build </li><li>Step2. cordova run android </li></ul><h1 id="cordova-run-ios-가-안된다"><a href="#cordova-run-ios-가-안된다" class="headerlink" title="cordova run ios 가 안된다."></a>cordova run ios 가 안된다.</h1><p> “ios-deploy was not found. Please download, build and install version 1.9.2 or greater from <a href="https://github.com/phonegap/ios-deploy" target="_blank" rel="noopener">https://github.com/phonegap/ios-deploy</a> into your path, or do ‘npm install -g ios-deploy’”</p><p> 해결 :  <a href="https://github.com/ios-control/ios-deploy/issues/346" target="_blank" rel="noopener">https://github.com/ios-control/ios-deploy/issues/346</a></p><h1 id="cordova-App-에서-mode-history하면-최초-컴포넌트를-불러오지-못한다"><a href="#cordova-App-에서-mode-history하면-최초-컴포넌트를-불러오지-못한다" class="headerlink" title="cordova (App)에서 mode: history하면 최초 컴포넌트를 불러오지 못한다."></a>cordova (App)에서 mode: history하면 최초 컴포넌트를 불러오지 못한다.</h1><p><a href="https://www.npmjs.com/package/vue-cli-plugin-cordova" target="_blank" rel="noopener">https://www.npmjs.com/package/vue-cli-plugin-cordova</a></p><p><a href="https://forum.quasar-framework.org/topic/726/history-mode-for-web-and-not-for-cordova/11" target="_blank" rel="noopener">https://forum.quasar-framework.org/topic/726/history-mode-for-web-and-not-for-cordova/11</a> </p><p>#cordova 최초시작 페이지 설정<br>config/config.xml<br>  <!--<content src="dist/index.html" />--></p><h1 id="bashsrc-Or-bash-profile-에-다음과-같이-써놓으면-참-편함-매번-터미널에서-cd-cd-cd-안해도-됩니다"><a href="#bashsrc-Or-bash-profile-에-다음과-같이-써놓으면-참-편함-매번-터미널에서-cd-cd-cd-안해도-됩니다" class="headerlink" title="~./bashsrc Or ~/.bash_profile 에 다음과 같이 써놓으면 참 편함 매번 터미널에서 cd..cd..cd 안해도 됩니다."></a>~./bashsrc Or ~/.bash_profile 에 다음과 같이 써놓으면 참 편함 매번 터미널에서 cd..cd..cd 안해도 됩니다.</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//your bash </span><br><span class="line">~/.bash_profile</span><br><span class="line"> //OR</span><br><span class="line">~/.bashsrc</span><br></pre></td></tr></table></figure><p>출처<br>폰트 관련 : <a href="https://medium.com/@valeriocapogna/how-to-setup-a-cordova-app-using-vue-js-8ba1315b9666" target="_blank" rel="noopener">https://medium.com/@valeriocapogna/how-to-setup-a-cordova-app-using-vue-js-8ba1315b9666</a><br>최초 세팅 관련 : <a href="https://itnext.io/make-hybrid-platform-cordova-vue-webpack-2fb7031c4f9b" target="_blank" rel="noopener">https://itnext.io/make-hybrid-platform-cordova-vue-webpack-2fb7031c4f9b</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TL-DR&quot;&gt;&lt;a href=&quot;#TL-DR&quot; class=&quot;headerlink&quot; title=&quot;TL;DR&quot;&gt;&lt;/a&gt;TL;DR&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Cordova SPA App의 한계는 초기로딩 속도를 제외하고 WebApp넘어 설 수 없음(인
      
    
    </summary>
    
    
      <category term="hybridFramework" scheme="https://shin-beomchul.github.io/tags/hybridFramework/"/>
    
      <category term="Cordova" scheme="https://shin-beomchul.github.io/tags/Cordova/"/>
    
  </entry>
  
  <entry>
    <title>reactNative</title>
    <link href="https://shin-beomchul.github.io/2018/10/26/hex-ReactNative/reactNative/"/>
    <id>https://shin-beomchul.github.io/2018/10/26/hex-ReactNative/reactNative/</id>
    <published>2018-10-26T01:23:24.000Z</published>
    <updated>2018-11-06T06:31:08.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h1><ul><li>아이디어나 패러다임은 최고!, 네이티브 컴포넌트로 빌드 되다니!</li><li>이미 ReactJS로 개발 되어 있다면 좋은 결정이 될수도. </li><li>각 플랫폼 특성및 기능을 사용하려면 NativeModule을 사용해야 하는데. 이게 각 플랫폼의 특성과 개발 할 줄 알아야함. Java의 Jni와 유사한 원리</li><li>쉽고 간단한 Rest Api / Listing / Show  board기반 정도의 앱이라면 아주 간단하게 느껴질 수 있다. 간단한 앱을 개발 하는 정도라면 good</li><li>샘플 한번 돌려보고 오 괜찮네? 쉽네 두개 크로스플랫폼 할만하네? 착각 하지말것.  </li><li>ReactNative는 모바일을 개발하는 하나의 “방법” 정도 일뿐.</li><li>코드이중화와 플랫폼별 개발에 따라서 코드 복잡도가 심각하게 증가 할 수 있다.</li><li>WebView Base App 만들거면 코르도바 사용할것. (링크)</li></ul><h1 id="대충-이해하고-갑니다-흐름"><a href="#대충-이해하고-갑니다-흐름" class="headerlink" title="대충 이해하고 갑니다. 흐름"></a>대충 이해하고 갑니다. 흐름</h1><ol><li>ReactJS(config)  – 브릿지 – 네이티브 컴포넌트<br>:ReactJS가 브릿지를 통해 네이티브 컴포넌트들을 위치 시키고 조작하고, 배치 시킴.<br>모바일 개발자라면 한번쯤 상상해 봤을 시나리오.<br>모든 config를 원격지에서 가지고 있으면 앱로딩 시점에 config에 따라 네이티브 컴포넌트를 배치 시키면 배포 없이 개발 가능하지 않을까? 라는 상상을 신입때 했었는데 세상에 실제로 일어났습니다.<br>예. 실제로 CodePush라는 기능으로 원격에서 배포없이 가능해요.</li></ol><h1 id="앱-설치-실행-까지-3줄이면-가능은-합니다만"><a href="#앱-설치-실행-까지-3줄이면-가능은-합니다만" class="headerlink" title="앱 설치/ 실행 까지 3줄이면 가능은 합니다만.."></a>앱 설치/ 실행 까지 3줄이면 가능은 합니다만..</h1><p>설치<br>sudo npm install -g react-native-cli</p><p>생성<br>react-native init godBeomProject</p><p>빌드<br>react-native run-ios –simulator=”iPhone 6s”</p><ul><li>밥로스 아저씨 처럼 3줄만 적으면 쉽게 될것 같지만 안됩니다ㅋ.<br>여러 이유에 의해서 그래서 기록해뒀어요. </li></ul><h1 id="위과정을-수행하면서-겪은-상황별-에러-대처-방법"><a href="#위과정을-수행하면서-겪은-상황별-에러-대처-방법" class="headerlink" title="위과정을 수행하면서 겪은 상황별 에러 대처 방법."></a>위과정을 수행하면서 겪은 상황별 에러 대처 방법.</h1><h1 id="npm-install-시-usr-local-쪽에서-권한문제로-설치-실패"><a href="#npm-install-시-usr-local-쪽에서-권한문제로-설치-실패" class="headerlink" title="npm install 시 usr/local 쪽에서 권한문제로 설치 실패"></a>npm install 시 usr/local 쪽에서 권한문제로 설치 실패</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install &#123;설치할것&#125; --unsafe-perm=true --allow-root</span><br></pre></td></tr></table></figure><h1 id="run할때-mkdir해야-하는데-하이시에라에서-권한-오류"><a href="#run할때-mkdir해야-하는데-하이시에라에서-권한-오류" class="headerlink" title="run할때 mkdir해야 하는데 하이시에라에서 권한 오류"></a>run할때 mkdir해야 하는데 하이시에라에서 권한 오류</h1><p>  EACCES: permission denied, mkdir : ../../../react-native/node_modules </p><p>  #1.solution<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/god/Dev/github/React-Native-Hello/NavPrject/node_modules/react-native/</span><br></pre></td></tr></table></figure></p><h1 id="watchman설치-요구"><a href="#watchman설치-요구" class="headerlink" title="watchman설치 요구."></a>watchman설치 요구.</h1><p>   error 1 해결 후 run -&gt;<br>   Loading dependency graph…(node:5604) UnhandledPromiseRejectionWarning: Error: <code>fsevents</code> unavailable (this watcher can only be used on Darwin)<br>    solution</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install watchman</span><br></pre></td></tr></table></figure><p>후 엑스코드 커맨드 라인툴 설치.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure></p><h1 id="watchmanconfig-루트에-추가해야함"><a href="#watchmanconfig-루트에-추가해야함" class="headerlink" title=".watchmanconfig 루트에 추가해야함."></a>.watchmanconfig 루트에 추가해야함.</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo touch .watchmanconfig</span><br></pre></td></tr></table></figure><h1 id="프로젝스-init-시-Command-failed-npm-install-–save-–save-exact-react-native"><a href="#프로젝스-init-시-Command-failed-npm-install-–save-–save-exact-react-native" class="headerlink" title="프로젝스 init 시 Command failed: npm install –save –save-exact react-native"></a>프로젝스 init 시 Command failed: npm install –save –save-exact react-native</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">: npm cache clean 후 재시도</span><br></pre></td></tr></table></figure><h1 id="android-error-adb-cannot-found-adb-환경-변수-설정"><a href="#android-error-adb-cannot-found-adb-환경-변수-설정" class="headerlink" title="android error : adb cannot found  = adb 환경 변수 설정"></a>android error : adb cannot found  = adb 환경 변수 설정</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;/Users/god/Library/Android/sdk/platform-tools&quot;:$PATH</span><br><span class="line"></span><br><span class="line">// or</span><br><span class="line"></span><br><span class="line">echo &quot;export PATH=\$PATH:/Users/$&#123;USER&#125;/Library/Android/sdk/platform-tools/&quot; &gt;&gt; ~/.bash_profile &amp;&amp; source ~/.bash_profile</span><br></pre></td></tr></table></figure><h1 id="기타-꿀팁"><a href="#기타-꿀팁" class="headerlink" title="기타 꿀팁"></a>기타 꿀팁</h1><h1 id="노드-npm-업데이트"><a href="#노드-npm-업데이트" class="headerlink" title="노드 ,npm 업데이트"></a>노드 ,npm 업데이트</h1><p> <a href="https://velopert.com/1351" target="_blank" rel="noopener">https://velopert.com/1351</a></p><h1 id="하이시에라-권한-상승"><a href="#하이시에라-권한-상승" class="headerlink" title="하이시에라 권한 상승"></a>하이시에라 권한 상승</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami) $(brew --prefix)/*</span><br></pre></td></tr></table></figure><h1 id="노드모듈-권한-상승"><a href="#노드모듈-권한-상승" class="headerlink" title="노드모듈 권한 상승"></a>노드모듈 권한 상승</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami):staff /usr/local/lib/node_modules</span><br></pre></td></tr></table></figure><h1 id="Android-Studio-빌드하는데-accessDenied-난다"><a href="#Android-Studio-빌드하는데-accessDenied-난다" class="headerlink" title="Android Studio 빌드하는데 accessDenied 난다"></a>Android Studio 빌드하는데 accessDenied 난다</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 &#123;yourProjectFolder&#125;</span><br></pre></td></tr></table></figure><h1 id="인스타-페이크앱-개발경험"><a href="#인스타-페이크앱-개발경험" class="headerlink" title="인스타 페이크앱 개발경험"></a>인스타 페이크앱 개발경험</h1><p><a href="http://slides.com/rotoshine/try-react-native-to-web-developer#/28" target="_blank" rel="noopener">http://slides.com/rotoshine/try-react-native-to-web-developer#/28</a></p><h1 id="아-할꺼-다해봤는데-안된다-에뮬레이터-변경-시도"><a href="#아-할꺼-다해봤는데-안된다-에뮬레이터-변경-시도" class="headerlink" title="아.. 할꺼 다해봤는데 안된다 = 에뮬레이터 변경 시도"></a>아.. 할꺼 다해봤는데 안된다 = 에뮬레이터 변경 시도</h1><p>react-native run-ios –simulator=”iPhone 6s”</p><h1 id="NativeModule-누군가-개발해놓은-모듈-설치"><a href="#NativeModule-누군가-개발해놓은-모듈-설치" class="headerlink" title="NativeModule(누군가 개발해놓은 모듈)설치"></a>NativeModule(누군가 개발해놓은 모듈)설치</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add react-native-android-fullscreen-webview-video</span><br><span class="line">or</span><br><span class="line">npm install react-native-android-fullscreen-webview-video --save</span><br></pre></td></tr></table></figure><p>다운받은 모듈 내 프로젝트에 적용<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">프로젝트 root디렉토리$:  react-native link</span><br></pre></td></tr></table></figure></p><h1 id="의존-라이브러리-제거"><a href="#의존-라이브러리-제거" class="headerlink" title="의존 라이브러리 제거"></a>의존 라이브러리 제거</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">react-native unlink lib-name-example</span><br><span class="line">npm uninstall --save lib-name-example</span><br></pre></td></tr></table></figure><h1 id="androidStudio에서-특정-파일을-제거할-권한이-없어서-빌드가-안된다"><a href="#androidStudio에서-특정-파일을-제거할-권한이-없어서-빌드가-안된다" class="headerlink" title="androidStudio에서 특정 파일을 제거할 권한이 없어서 빌드가 안된다."></a>androidStudio에서 특정 파일을 제거할 권한이 없어서 빌드가 안된다.</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;ProjectRoot&#125;$-&gt; sudo ./gradlew clean</span><br></pre></td></tr></table></figure><p>가상머신 실행<br><a href="http://yuddomack.tistory.com/entry/1React-Native-%EC%84%A4%EC%B9%98%EC%99%80-%EC%8B%A4%ED%96%89hello-world" target="_blank" rel="noopener">http://yuddomack.tistory.com/entry/1React-Native-%EC%84%A4%EC%B9%98%EC%99%80-%EC%8B%A4%ED%96%89hello-world</a></p><p>reactNative 배포<br><a href="https://bomjjack.github.io/programming/2018/01/06/rn-android-app-release/" target="_blank" rel="noopener">https://bomjjack.github.io/programming/2018/01/06/rn-android-app-release/</a></p><h1 id="클린-개발-맥"><a href="#클린-개발-맥" class="headerlink" title="클린 개발 맥"></a>클린 개발 맥</h1><p><a href="https://www.theteams.kr/teams/35/post/67342" target="_blank" rel="noopener">https://www.theteams.kr/teams/35/post/67342</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TL-DR&quot;&gt;&lt;a href=&quot;#TL-DR&quot; class=&quot;headerlink&quot; title=&quot;TL;DR&quot;&gt;&lt;/a&gt;TL;DR&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;아이디어나 패러다임은 최고!, 네이티브 컴포넌트로 빌드 되다니!&lt;/li&gt;
&lt;li&gt;이미 Reac
      
    
    </summary>
    
    
      <category term="React-Native" scheme="https://shin-beomchul.github.io/tags/React-Native/"/>
    
      <category term="hybridFramework" scheme="https://shin-beomchul.github.io/tags/hybridFramework/"/>
    
  </entry>
  
  <entry>
    <title>직관적인 이해와 원 및 활용을 위한 준비들</title>
    <link href="https://shin-beomchul.github.io/2018/10/16/hex-etc/etc-deepLean/"/>
    <id>https://shin-beomchul.github.io/2018/10/16/hex-etc/etc-deepLean/</id>
    <published>2018-10-16T08:00:48.000Z</published>
    <updated>2018-11-06T04:13:04.502Z</updated>
    
    <content type="html"><![CDATA[<p>연자 : 한국전자통신연구원 - 김대환<br>범위 : 넓고 얇은 내용</p><p><strong>딥러닝 3가지</strong><br>분류 : 책상인지, 책상이 아닌지,<br>군집화 : 비슷한 것들끼리 묶어주는 것. (알려주지 않고 알아서 분류)<br>회귀 </p><p><strong>쓰는곳</strong><br>컴퓨터 비전<br>페턴인식<br>자율주행,게임<br>소리,미술<br>예측</p><p>우리나라 기상이 틀리는이유<br>: 축적,학습된 데이터가 없음. 그냥 단순예측만 했었음.</p><p>퍼셉트론(크냐,작냐) : 직선만 분류 할 수 있음. 데이터는 곡선을 가지는데 표현 불가능. - &gt; 함수화<br>시그모이드 : 아메리카노 꼭 먹어야됨? 아님 다른 방법도 있음. 대비되는 값으로 결정. 퍼셉트론의 작냐 크냐보다 효율적이고 좋음.<br>ReLU</p><p>딥러닝은  데이터만 있으면 알아서 분류함. 과거에 인간이 특징을 추출하고 머신러닝을 돌렸던것과 다른 3세대 뉴런임.</p><p>딥러닝은 훈련과 테스트 테이타로 나뉘는것이 중요함.</p><p>원-핫 인코딩<br>1,2,3,4,5,6,7,8… 은 </p><p>1 : 1.0.0.0.0.0<br>2 : 0.1.0.0.0.0</p><p>학습 : w를 찿아 가는 방법(가중치)<br>         N차원의 그래프에서 가장 최소값을 찿는것.</p><p>영상 관련 딥러닝 CNN<br>알고리즘 종류<br> LeNet<br> AlexNet</p><p>딥러닝 핫 키워드<br>RNN<br>GAN<br>VAE<br>CAE</p><p>학회<br>CVPE<br>IC<br>NIPS<br>ICML</p><h1 id="TODO-딥러닝"><a href="#TODO-딥러닝" class="headerlink" title="TODO 딥러닝"></a>TODO 딥러닝</h1><p> 하지 말이야 할것.<br>   이론부터 하지마<br>   다 배우려 하지마<br>   수식집착<br>   다 만들려 하지마.<br>   코딩 언어 바꾸지마.</p><p>언어 : 파이썬 강추<br>딥러닝 라이브러리 : 탠서플로 ,파이토치, 케라스 ,카페2 CNTK, DL4J</p><p><strong>시스템 구성</strong><br>-SW 선택<br> 네트워크 구조 선택<br> 데이터 셋 생성<br> 모델 생성<br> 결과 가시화<br> 테스트</p><p>-프레임 워크 선택<br> Caffe. DL4J…</p><p> 추천 HW : Nvida DGX-1 딥러닝 전용 시스템</p><p> 파이썬, 라이브러리 , 딥러닝 이해 다 귀찮아  : 자동화된 머신러닝  AutoML<br> -autoWEKA<br> -TPOT<br> -Google Cloud AutoML : 다계층 딥러닝 모델의 설계 자동화 </p><p>책추천<br> Deep Learning (빨강표지 밑바닥부터 시작하는 딥러닝)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;연자 : 한국전자통신연구원 - 김대환&lt;br&gt;범위 : 넓고 얇은 내용&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;딥러닝 3가지&lt;/strong&gt;&lt;br&gt;분류 : 책상인지, 책상이 아닌지,&lt;br&gt;군집화 : 비슷한 것들끼리 묶어주는 것. (알려주지 않고 알아서 분류)&lt;b
      
    
    </summary>
    
    
      <category term="etc" scheme="https://shin-beomchul.github.io/tags/etc/"/>
    
  </entry>
  
  <entry>
    <title>codeGen</title>
    <link href="https://shin-beomchul.github.io/2018/09/28/hex-android/codeGen/"/>
    <id>https://shin-beomchul.github.io/2018/09/28/hex-android/codeGen/</id>
    <published>2018-09-28T01:16:46.000Z</published>
    <updated>2018-09-28T01:49:50.173Z</updated>
    
    <content type="html"><![CDATA[<p>#Swagger-Codegen 이란?</p><ul><li>Swagger Format Json으로 API요청 모듈을 자동으로 생성.</li></ul><p>#Swagger-Codegen을 통해 얻을 수 있는것.</p><ul><li>수많은 API 리스트를 보며 일일히 작성할 필요 없음.</li><li>완전한 API 요청 코드.</li><li>다양한 플래폼의 API요청 모듈</li></ul><p>#왜 사용하는가?</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#Swagger-Codegen 이란?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Swagger Format Json으로 API요청 모듈을 자동으로 생성.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;#Swagger-Codegen을 통해 얻을 수 있는것.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;수많은 
      
    
    </summary>
    
    
      <category term="android" scheme="https://shin-beomchul.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 패러다임의 전환, 그리고 성공적인 개발조직 운영 방향</title>
    <link href="https://shin-beomchul.github.io/2018/08/14/hex-etc/etc-sw%E1%84%91%E1%85%A2%E1%84%85%E1%85%A5%E1%84%83%E1%85%A1%E1%84%8B%E1%85%B5%E1%86%B7-%E1%84%80%E1%85%A2%E1%84%87%E1%85%A1%E1%86%AF%E1%84%8C%E1%85%A9%E1%84%8C%E1%85%B5%E1%86%A8%E1%84%8B%E1%85%AE%E1%86%AB%E1%84%8B%E1%85%A7%E1%86%BC/"/>
    <id>https://shin-beomchul.github.io/2018/08/14/hex-etc/etc-sw패러다임-개발조직운영/</id>
    <published>2018-08-14T07:21:33.000Z</published>
    <updated>2018-08-16T01:45:02.845Z</updated>
    
    <content type="html"><![CDATA[<p>주제 : SW개발 패러다임의 전환, 그리고 성공적인 개발조직 운영 방향<br>연자 : 아주대학교 소프트웨어학과 윤대균 교수 (daekyuny.symflow.com)</p><p>Session 1 : 에자일, 마이크로서비스</p><ul><li>엣지컴퓨팅</li><li><p>에자일 왜 그토록 애자일?<br>   에자일은 하나의 백로그가 하루 정도에 끝나야 한다. 50% 개발 완료? 이런것만큼 모호한 말은 없음.  했다. 안했다.<br>   폭포수 : Plan driven : 계획하에 진행. (SI에서 주로 진행. 계약관계에 정해진 일정에 의한 )<br>   폭포수에서는 가시성이 떨어짐 (언제, 얼만큼 개발 되는지 알 기 힘듦)</p><p>   3명의 구성원.</p><ul><li>프로덕트 오너</li><li>스크럼 마스터 </li><li>팀 멤버</li></ul></li><li><p>개발자 테스터 디자이너가 한곳에 있어야 효율적.</p></li><li>데일리 스크럼      </li><li>자동화가 어느정도 개발 되 있어야함.</li><li>Scaling Instagram </li><li><p>DevOps : 개발과 운영의 합성어<br> 오해 하지말것 : 개발자가 운영일을 하라는 뜻이 아님. 운영은 일반적으로 음지에서 -&gt; 운영의 가시화</p><p> 물리-&gt;가상화-&gt;공개 클라우드-&gt;프라이밋 클라우드-&gt;컨테이너 </p><p> 컨테이너 : 실행에 필요한 패키지들을 모두 하나의 컨테이너에 담아 배포 </p><pre><code>기존 시스템 환경의 영향을 받지 않는 손쉬운 배포/전개장점 : 서비스 생성 및 실행이 실시간으로 즉시 이루어질 수 있음.</code></pre></li></ul><pre><code>마이크로 서비스의 장점  뉴테크 적용 쉬움. 테스트가 쉬움. 단점 :  배포가 힘들 수 있음.  따라서 컨테이너 오케스트레이션이 필요함. 잘 아는 총책임 아키테쳐가 있어야함.  kubelet(쿠버네티스) 구글 : Ex) 서버 2000대 를 하나의 컨테이너로 소켓 꼽듯이 추가 함.  pod : 실제 배포 단위</code></pre><p>Session 2 : 내 업무 도메인에 적합한가? 우리 조직이 받아 들일 준비가 되있는가?<br>좋은조직? : 경험이 풍부한 조직 , 어떤 경험? 성공의 경험<br>한 프로젝트 주기는 보통 얼마나 되는가?<br>한팀 규모는 어느정도 ?<br>프로젝트의 목표를 팀내 모든 구성원들이 정확히 공유하고 있는가?<br>본인의 역할과 목표를 정확히 설명 할수 있는가?<br>팀 내 구성원 각각이 어떤 일을 하는지 서로 잘 아는가?<br>코드리뷰 하는가?<br>TDD적용 되어 있는가?<br>진행과정을 결과물로 보여줄 수 있는가?</p><p>오픈소스 -&gt; 커스터마이징-&gt; dogfooding(불편하더라도 써보기.) </p><p>실행<br> 기술 로드맵 테크니컬 asset<br> 인적관리 휴먼 asset<br> 목표를 정하고,  옵셔널 Excellency </p><p>성공의 경험 -&gt;동기부여  -&gt; 롤모델</p><p><strong>Best : 성공적인 프로젝트 경험을 가지고 있고, 각 구성원이 성공한 프로젝트에서의 뚜렷한 역할이 있으며, 다양한 성공의 겅험을 축적한 롤모델이 함께 하는 조직.</strong></p><p>Q &amp; A<br>우리 개발기간이 2~3년 처럼 길다 어떻게 해야하나?<br>  작은 서비스 단위로 쪼개서 성과를 낼 수 있게 해야함.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;주제 : SW개발 패러다임의 전환, 그리고 성공적인 개발조직 운영 방향&lt;br&gt;연자 : 아주대학교 소프트웨어학과 윤대균 교수 (daekyuny.symflow.com)&lt;/p&gt;
&lt;p&gt;Session 1 : 에자일, 마이크로서비스&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="etc" scheme="https://shin-beomchul.github.io/tags/etc/"/>
    
  </entry>
  
  <entry>
    <title>Android 에러 정리</title>
    <link href="https://shin-beomchul.github.io/2018/08/10/hex-android/android-error-post/"/>
    <id>https://shin-beomchul.github.io/2018/08/10/hex-android/android-error-post/</id>
    <published>2018-08-10T04:10:07.000Z</published>
    <updated>2018-10-04T09:46:41.779Z</updated>
    
    <content type="html"><![CDATA[<ol><li><h1 id="코틀린-의-냄새"><a href="#코틀린-의-냄새" class="headerlink" title="코틀린 !, ? 의 냄새."></a>코틀린 !, ? 의 냄새.</h1></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">**? : 책임회피(널 이어도 몰라, 무시(호출 하지마)**</span><br><span class="line">    런타임에 죽지는 않지만 어디서 에러가 나는지 인지가 힘듦</span><br><span class="line">    그 숨겨진 문제의 보일러코드를 양산한 소지가 있음.</span><br><span class="line">    기능이 안되는데 왜 안되는지 현상이 안일어 나기떄문에 디버깅이 힘들어짐.</span><br><span class="line"></span><br><span class="line">!  : 엄격한</span><br><span class="line">     런타임에 죽을 확률 높아짐</span><br><span class="line">     (에러가 난다 == 견고하지 못한곳(개발자가 예상하지 못한 상황이 일어 날수 있는 코드)을 명확히 찝음).</span><br><span class="line">     !인데 서버 및 특정 이유로 응답으로 null 이 온다면 앱이 죽음.</span><br></pre></td></tr></table></figure><h1 id="코틀린은-마법이-아니다"><a href="#코틀린은-마법이-아니다" class="headerlink" title="코틀린은 마법이 아니다."></a>코틀린은 마법이 아니다.</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">코틀린은 자바의 실수를 보완해 주는 &quot;방법&quot;이 추가 된것뿐. 새로운 언어도 아니며, 그냥 자바일뿐. 자바를 좀더 효율적으로 사용 할 수 있게 문법이 바뀐것 .</span><br><span class="line">Note : 한쪽 다리가 없는 뚱뚱한 강아지가 살을 뺀다면 걷기는 쉬워질순 있어도 결국 한쪽 다리가 없는 3개의 다리로 걷는것은 변함 없다.</span><br><span class="line">코틀린은 자바에서 있었던 문제들을 자동으로 해결(Null 이슈 등 )해 주지 않는다.</span><br></pre></td></tr></table></figure><h1 id="코틀린-단일추상형-인터페이스의-표현이-바뀜"><a href="#코틀린-단일추상형-인터페이스의-표현이-바뀜" class="headerlink" title="코틀린 단일추상형 인터페이스의 표현이 바뀜."></a>코틀린 단일추상형 인터페이스의 표현이 바뀜.</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">호출하고자 하는 단일추상함수를 가진 함수.</span><br><span class="line">fun  certModel (token:String, callback:SimpleCallBack)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">v 1.5 : certModel(&quot;Qw3sDeDXaqzzq&quot;, &#123;  memberDTO -&gt;  ....  &#125;) </span><br><span class="line">v 1.6 : certModel(&quot;Qw3sDeDXaqzzq&quot;, SimpleCallBack &#123; memberDTO -&gt; .... &#125;)</span><br></pre></td></tr></table></figure><h1 id="코틀린-마이그레이션-유의사항"><a href="#코틀린-마이그레이션-유의사항" class="headerlink" title="코틀린 마이그레이션 유의사항"></a>코틀린 마이그레이션 유의사항</h1><ol><li>코틀린 자동 변환 시 함수의 파라미터앞에 자바 어노테이션이 없을 경우 NotNull 형태로 변환 전환변환 된다.<br>: 코틀린 자바 파일을 코틀린에서 사용 할때 기본 NotNull로 인식함. (널허용하지 않음)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">override <span class="keyword">void</span> <span class="title">onPageStarted</span><span class="params">(WebView view, String url, Bitmap favicon)</span> </span>&#123;</span><br><span class="line"><span class="comment">// java code...     </span></span><br><span class="line"><span class="comment">// 자바에서 favicon 에 null이 들어와도 함수 내부에서 사용하지 않으면 RunTimeException 뿜지 않음.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onPageStarted</span><span class="params">(view: <span class="type">WebView</span>, url: <span class="type">String</span>, favicon: <span class="type">Bitmap</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">// kotlin code...</span></span><br><span class="line"><span class="comment">// 코틀린에서 favicon 이 null이라면 해당 함수 호출 즉시 RunTimeException </span></span><br><span class="line"><span class="comment">// why? : 코틀린에서 ? 키워드가 없는 파라미터는 NotNull 널을 허용하지 않음.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="implementation-api-차이점"><a href="#implementation-api-차이점" class="headerlink" title="implementation , api 차이점"></a>implementation , api 차이점</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[implementation]</span><br><span class="line">Note : 모듈 A에서 의존하는 라이브러리는 정적타임(비런타임)에서 참조 하거나 사용 할수 없다.</span><br><span class="line"></span><br><span class="line">what? : </span><br><span class="line">메인 프로젝트가 모듈A를 의존할 때 모듈 A에서 의존하고 있는 라이브러리를 메인 모듈에서 사용 할 수 없음.</span><br><span class="line">하지만 모듈 A의 코드는 메인 프로젝트에서 사용 할 수 있음.</span><br><span class="line"></span><br><span class="line">why? :</span><br><span class="line">implementation : 빌드 시 직접 종속하는 모듈만 재컴파일(라이브러리를 사용하는 모듈A) </span><br><span class="line">compile : 빌드 시 메인모듈과 모듈A 둘다 재컴파일 (모두 사용 될 수 있기 때문)</span><br><span class="line"></span><br><span class="line">쉽게좀.. :</span><br><span class="line">implementation는 선언된 모듈A 내에서만 사용 가능.</span><br><span class="line">메인 모듈이 모듈 A를 의존하고 있다고 해서 모듈의 implementation 라이브러리르 사용 할수 없다.</span><br><span class="line">: 컴파일 룰이 생김. 무조건 implementation된 라이브러리는 해당 모듈에서만 빌드한다.</span><br><span class="line">: 이후 컴파일된 모듈은 런타임에서 메인모듈에서 사용된다. (메인모듈에서 컴파일 할 필요가 없어짐.)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*몇년후 까먹을 나에게 기억 팁 : DenPLE Api모듈과 메인모듈에서</span><br><span class="line">  RxJava의존성이 API모듈에만 의존하고 있었고 compile때는 잘되다가 변경 후 사용 할 수 없었음. </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> [api] == compile </span><br><span class="line">위 제약조건 없이 사용 가능.</span><br></pre></td></tr></table></figure><h1 id="18-08-10-Realm-과-ButterKnife-함께-사용-시-에러"><a href="#18-08-10-Realm-과-ButterKnife-함께-사용-시-에러" class="headerlink" title="18.08.10 - Realm 과 ButterKnife 함께 사용 시 에러"></a><strong>18.08.10 - Realm 과 ButterKnife 함께 사용 시 에러</strong></h1><p>현상 : Kotlin + 익스텐션 + 자바 + 버터나이프 빌드에 문제 없었지만, Realm 관련 기능 추가 후 에러 발생.<br>원인 :  Realm  apply plugin: ‘realm-android’ 사용 시 Butterknife Null Point 에러 발생함.<br>해결방안 : annotationProcessor  을 kapt 로 변경<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">kapt <span class="string">'com.jakewharton:butterknife-compiler:8.8.1'</span></span><br><span class="line"><span class="comment">//   annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1' // realm과 충돌 kapt로 변경</span></span><br></pre></td></tr></table></figure></p><p> <strong> FireBase 버전 확인 </strong><br>FireBase Release Note  URL<br><a href="https://firebase.google.com/support/release-notes/android" target="_blank" rel="noopener">https://firebase.google.com/support/release-notes/android</a></p><h1 id="studio-Sample-Implort시-에러-날-경우"><a href="#studio-Sample-Implort시-에러-날-경우" class="headerlink" title=" studio Sample Implort시 에러 날 경우.  "></a><strong> studio Sample Implort시 에러 날 경우.  </strong></h1><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">google      &lt;-- 위쪽에 위치해야 정상 빌드 될 수 있음 Std3.<span class="number">0</span></span><br><span class="line">jcenter</span><br></pre></td></tr></table></figure><h1 id="studio-3-x-gt-3-2-업데이트-시-현재-Build-Variants-로그-에러-날-경우"><a href="#studio-3-x-gt-3-2-업데이트-시-현재-Build-Variants-로그-에러-날-경우" class="headerlink" title="studio 3.x -&gt; 3.2 업데이트 시 현재 Build Variants 로그 에러 날 경우."></a><em>studio 3.x -&gt; 3.2 업데이트 시 현재 Build Variants 로그 에러 날 경우.</em></h1><p><strong>1. 그래들과 플러그인 버전이 다를 경우 문제를 일으킴.</strong></p><p><a href="https://developer.android.com/studio/releases/gradle-plugin#updating-gradle에서" target="_blank" rel="noopener">https://developer.android.com/studio/releases/gradle-plugin#updating-gradle에서</a> 현제 그래들과 맞는 플러그인 버전을 확인 한뒤<br>file -&gt; prject Structs -&gt; project -&gt; gradle version, Android Plugin Version 수정 할것.</p><p><strong>2. 버터나이프 문제 </strong></p><p>Gradle Error Log<br>…</p><p>at butterknife.plugin.ButterKnifePlugin$_apply_closure1$_closure2$_closure3$_closure4.doCall(ButterKnifePlugin.groovy:31)</p><p>…</p><p><strong>해결</strong><br>Project  build.gradle In</p><p> maven { url “<a href="https://oss.sonatype.org/content/repositories/snapshots/" target="_blank" rel="noopener">https://oss.sonatype.org/content/repositories/snapshots/</a>“ } 추가.<br> classpath ‘com.jakewharton:butterknife-gradle-plugin:9.0.0-SNAPSHOT’ 으로 변경 업데이트.</p> <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line"> ext.kotlin_version = <span class="string">'1.2.61'</span></span><br><span class="line">   <span class="keyword">repositories</span> &#123;</span><br><span class="line">    jcenter()</span><br><span class="line">    google()</span><br><span class="line">    maven &#123; url <span class="string">"https://oss.sonatype.org/content/repositories/snapshots/"</span>&#125;   [Here  add!!]</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:3.2.0'</span></span><br><span class="line">    <span class="keyword">classpath</span> <span class="string">'com.jakewharton:butterknife-gradle-plugin:9.0.0-SNAPSHOT'</span>     [Here add!!]</span><br><span class="line">    <span class="keyword">classpath</span> <span class="string">"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"</span></span><br><span class="line">    <span class="keyword">classpath</span> <span class="string">"io.realm:realm-gradle-plugin:4.2.0"</span></span><br><span class="line"> </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="스튜디오-3-x부터는-buildToolsVersion-필요없음"><a href="#스튜디오-3-x부터는-buildToolsVersion-필요없음" class="headerlink" title="스튜디오 3.x부터는 buildToolsVersion 필요없음."></a>스튜디오 3.x부터는 buildToolsVersion 필요없음.</h1><h1 id="Context-불필요하게-생성자로-받지-말것"><a href="#Context-불필요하게-생성자로-받지-말것" class="headerlink" title="Context 불필요하게 생성자로 받지 말것."></a>Context 불필요하게 생성자로 받지 말것.</h1><pre><code>- 객체간 결합시 커플링 생기고 라이프사이클 의존성 생김.- 당연한거지만 Context 싱글톤으로 잡지말것. </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;h1 id=&quot;코틀린-의-냄새&quot;&gt;&lt;a href=&quot;#코틀린-의-냄새&quot; class=&quot;headerlink&quot; title=&quot;코틀린 !, ? 의 냄새.&quot;&gt;&lt;/a&gt;코틀린 !, ? 의 냄새.&lt;/h1&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;h
      
    
    </summary>
    
    
      <category term="android" scheme="https://shin-beomchul.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>aws-구축세션1</title>
    <link href="https://shin-beomchul.github.io/2018/07/12/hex-etc/etc-aws-%E1%84%80%E1%85%AE%E1%84%8E%E1%85%AE%E1%86%A8%E1%84%89%E1%85%A6%E1%84%89%E1%85%A7%E1%86%AB1/"/>
    <id>https://shin-beomchul.github.io/2018/07/12/hex-etc/etc-aws-구축세션1/</id>
    <published>2018-07-12T04:30:10.000Z</published>
    <updated>2018-07-12T07:13:45.948Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AWS-시작-PM-2-00"><a href="#AWS-시작-PM-2-00" class="headerlink" title="AWS 시작 - PM 2:00"></a>AWS 시작 - PM 2:00</h1><p><strong>엘라스틱 로드밸런싱</strong> : 스케일 확장 담당.<br><strong>레디스</strong> : 캐싱<br><strong>S3</strong> : 스태틱 컨텐츠 엑세스<br><strong>NoSQL</strong> : 관리 포인트가 사라지는 어플리케이션에서 관리가 될 수있음.<br><strong>백업</strong> : 신경쓸 필요가 없어짐. RDB 일경우 이중화에 신경 써야함.<br>       Wraning!! EC2 + RDBMS : 관리포인트가 늘어남.</p><p><strong>AWS 서비스</strong><br>젠킨스 : 관리포인트 늘어남.</p><p><strong>대안</strong><br>aws젠킨스<br>코드파이프라인<br>코드 디플로이<br>코드 빌드</p><h2 id="요금제"><a href="#요금제" class="headerlink" title="요금제"></a>요금제</h2><h4 id="온디멘트"><a href="#온디멘트" class="headerlink" title="온디멘트"></a>온디멘트</h4><p>사용한 단위만큼 비용을 냄. 끄면 과금 안됨. 인스턴스가 확장되면 더 내고</p><h4 id="스팟-인스턴스"><a href="#스팟-인스턴스" class="headerlink" title="스팟 인스턴스"></a>스팟 인스턴스</h4><p> 오토 스케일링을 지원하기 위해 클라우스 서비스를 제공함. 사용하지 않으면 경매 방식으로 제공함. 원래 만원인데 얼마에 쓰겠다. 경매를 함. 빅데이터 사용하는데 좀 더 빨리 계산해 내고 싶다. 이럴때사용함 보통 상태 저장이 필요 없는 서비스에 사용됨.</p><h4 id="리저브드-인스턴스-RI"><a href="#리저브드-인스턴스-RI" class="headerlink" title="리저브드 인스턴스(RI)"></a>리저브드 인스턴스(RI)</h4><p>1~ 3년 동안 계약하면 30~ 70% 까지 할인 해서 받을 수 있음.<br>약정, 계약과 자유도에 따라 (작은 -&gt;큰 스케일로 변경과 같은) 가격이 달라짐.<br>선택지: 서비스를 사용해보고 어느정도 유추가 돠면 적정사이즈 RI선택과 + 온디멘드를 병행함.<br>      온디멘드 사용하다가 RI요금제로 바꾸는 개념.</p><p><strong>m4</strong> : 가장 일반적인 타입.<br><strong>클래식,CLB,ELB</strong> : 3가지가 존재</p><p> ALB: 어플리케이션 로드밸런서 :웹서비스 시 권유 이유는 기능이 많이 추가 될 예정<br>   사용 월간비용, EC2 : 네트워크 비용 발생. </p><p>젠킨스 가격적인 비용이 유용? : 빌드가 잦지 않다면 젠킨스만으로 구성해도 좋음. 스케일 확장을 위해서는 코드 시리즈를 권장.</p><p><strong>Amazon Auroa</strong> : 마이그레이션을 위해 사용.<br>오라클 -&gt;마이에스큐엘로 많이 넘어오고 일반적인 케이스 라이센스 비용적 측면</p><p>aws비용 계산기로 대략적인 금액을 유추 할 수 있음.</p><h1 id="CI-CD-PM-2-50"><a href="#CI-CD-PM-2-50" class="headerlink" title="CI,CD  PM 2:50"></a>CI,CD  PM 2:50</h1><p>AWS 코드 시리즈 + 젠킨스</p><p>####코드 시리즈(코드 파이프라인)<br>코드 커밋 -&gt; 빌드 -&gt; 테스트 -&gt; 프로덕션(ECS,S3 각각에 맞는 서버에 배포)<br>: 코드스타가 새로 생김 원클릭 시스템</p><p>위 4가지 과정중에 나의 서비스로 교체 가능<br>람다: 서버리스 어플리케이션  </p><p>젠킨스온EC2</p><p>EC2 : 디비 서버로 사용함.<br>RDS : 관리는 aws가 전부 다 해줌.<br> 각각에 서비스에 맞게 디비를 사용해라. RDS는 관계형이라 편하다 때문ㅇ 선택을 많이함.<br> NOSQL 사용해보라. 왜냐면 데이터 로드들이 커지만 RDS확장이 힘들 수 있음.<br> NOSQL은 아무리 많아져도 가능하고 인스턴스 관리 필요 없고 물리적인 인스턴스 노출이 필요 없음.<br>마이크로서비스를 지향 할때는 NO SQL을 권장함.</p><h3 id="RDS"><a href="#RDS" class="headerlink" title="RDS?"></a>RDS?</h3><p> 관리가 편한이유 : 기본적으로 백업을 제공함. 1주일에서 기게는 35일 백업. 수동 스냅샷도 가능.<br> 리전 내지원 여부<br> 다른 리젠 읽기 복제 구성가능 :  리전간 복제가 가능함?  </p><ul><li>읽기복제 가능. 멀티 마스터 공개 예정 멀티 마스터?</li><li>그럼 중국인 가능하냐?<pre><code>- 일원화가 가능해야함. 중국과, 중국리전 만큼은 독립되어 있음. 모든 싱크 과정은 비공식 방화벽으로 함.- 중국을 제외 거의 다되지만 중국은 메뉴얼릭하게 구성되어야함. 중국깽깽이들..</code></pre></li></ul><p> 고가용성을 위한 멀티 a-z지원<br> 성능 옵션 지원<br> SSD(제네럴 퍼포스)<br> IOPS 고성능 스토리지.</p><h3 id="오로라"><a href="#오로라" class="headerlink" title="오로라?"></a>오로라?</h3><p> 2가지 오로라 마이에스큐엘 ,오라라 포스티  </p><p>S3 : 저장소 </p><h1 id="AWS-AI"><a href="#AWS-AI" class="headerlink" title="AWS AI"></a>AWS AI</h1><p>머신러닝 스택 이외의 기능을 제공 하려면 직접 구현해야함.<br>빅데이터는 데이터를 가지고, 문제 해결 하는 과정뿐만 아니라, <strong>SageMaker</strong>가 다 해결해줌.<br>높은성능의 GPU를 제공함을 주장.</p><p>질문  :다른리전간 동일 데이터를 가지고 가야함. 이유는 이원화를 막아야함.</p><p>DNS 서비스 라우터 53<br>US 리전<br>서울 리전 : 인프라 구성 (EC2,웹서버)</p><p>CF라는 씨디엔 제공 S3앞단으로 연결됨. 스테틱 UI 는 US에서 캐싱이 됨. 빠름<br>그러나 데이터가 필요한동적인 데이터는 느림 -&gt; 인프라 구축함<br>DNS를 한번 타고 치나 레이턴시 기준으로 유에스로 돌림.</p><p>데이터 복제가 어려움, 중국은 더더욱 어려움, US는 리드 레플리카가는 가능함. 데이터를 따로 갈수 있는것이 베스트<br>마스터 마스터 양측 다 쓰기가 일어나려면 신경을 많이써야함.해결: 멀티마스터 신경 써야함 레이턴시가 떨어질 수 밖에 없음 동기화 문제 때문에 어쩔 수 없음. 일반적으로 마스터 슬레이브 관계로 사용해야 할것이다.</p><p>클라우드 포메이션 : 문서화가 아니라 제이슨 형태로 정의가 가능함. 운영이나 어디든 똑같이 찍어낼 수 있음.</p><p>데이터베이스를 오로라로 넘기는 것에 대한 조언<br> 기본적인 서비스는 아니면 파트너 나 프로서 컨설팅 영역에 가까움 파트너에게 지원을 받아야함.<br> 메가존에서 지원 받을 것임.</p><p> 스키마 컨버젼 툴? 이기종간 마이그레이션이 안되는것을 지원.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;AWS-시작-PM-2-00&quot;&gt;&lt;a href=&quot;#AWS-시작-PM-2-00&quot; class=&quot;headerlink&quot; title=&quot;AWS 시작 - PM 2:00&quot;&gt;&lt;/a&gt;AWS 시작 - PM 2:00&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;엘라스틱 로드밸런싱
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://shin-beomchul.github.io/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>Android 중국 출시 삽질 노트.</title>
    <link href="https://shin-beomchul.github.io/2018/07/05/hex-android/android-china/"/>
    <id>https://shin-beomchul.github.io/2018/07/05/hex-android/android-china/</id>
    <published>2018-07-05T05:10:47.000Z</published>
    <updated>2018-09-19T13:13:42.520Z</updated>
    
    <content type="html"><![CDATA[<h2 id="결제-문화"><a href="#결제-문화" class="headerlink" title="결제 문화"></a>결제 문화</h2><ul><li><strong>오프라인 식당</strong></li></ul><ol><li>음식점 테이블에 QR이 붙어있음.</li><li>음식을 주문함.</li><li>음식 영수증을 받음. (중국은 한국처럼 영수증 1개로 법인처리가 안되고 간이 영수증과 법적 효력이 있는  영수증으로 구분됨) </li><li>테이블의 QR 코드 스캔 </li><li>바로 금액 입력 창이 뜸.</li><li>금액 입력.</li><li>지문 혹은 비밀번호 입력</li><li>결제완료</li><li>결제 완료를 음식점 주인에게 보여주거나, 음식점 주인이 결제를 확인함.<br>특징 : 계산대가 없음 </li></ol><ul><li>PC 온라인 쇼핑<ol><li>물건을 담음.</li><li>모바일 쇼핑 결제 요청 시 바로 비밀번호 입력창이 뜸(모바일)</li></ol></li></ul><h1 id="결제-개발"><a href="#결제-개발" class="headerlink" title="결제 개발"></a>결제 개발</h1><ul><li>위챗결제 홈  <a href="https://pay.weixin.qq.com/wiki/doc/api/index.html" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/index.html</a></li><li>위챗 개발 앱 데모 다운 <a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=11_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=11_1</a>  ]</li><li>위챗 개발 서버 데모 다운 <a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=11_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=11_1</a></li><li>위챗 서명도구 <a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_5" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_5</a></li><li>위챗 결제 인터페이스 서명 확인도구 <a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=20_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=20_1</a><ul><li>기업에서 개발 한 모바일 애플리케이션 만 WeChat In-App Payment를 신청할 권한이 있음.</li></ul></li></ul><p>삽질방지 팁 :<br>Android<br>Android 샘플실행 시 2018년 9월 19일 기준 다음과 같은 문제 </p><p>  -멀티덱스<br>  -libs 폴더에 jar파일 넣었을 경우 에러</p><p> 샘플을 돌리기 위한 TODO</p><ol><li>libs제거. </li><li>그래들 의존성 추가 implementation ‘com.tencent.mm.opensdk:wechat-sdk-android-with-mta:5.1.6’</li><li>빌드 그래들 3.0.0으로 변경 ,<br>4.멀티덱스 Fix multiDexEnabled true ,    multiDexEnabled true</li><li>실행 후 결제 테스트 : 네트워크 작업을 UI스레드에서 하고 있는 샘플??.. -&gt; 수정</li></ol><h2 id="경영허가증-발급"><a href="#경영허가증-발급" class="headerlink" title="경영허가증 발급"></a>경영허가증 발급</h2><h2 id="SW저작권증명서-발급"><a href="#SW저작권증명서-발급" class="headerlink" title="SW저작권증명서 발급"></a>SW저작권증명서 발급</h2><h2 id="푸시"><a href="#푸시" class="headerlink" title="푸시"></a><strong>푸시</strong></h2><p>android.  :  Baidu<br>IOS         :  APNS </p><p><strong>1.baidu</strong><br><strong> 한국에서 푸시  발송 후 5분 ~ 30분 정도의 늦게 도착하는 경우가 있음 (빈도 10/8) </strong></p><ul><li>중국에서는 지연없이 단말기에 도달 할까?<br>   중국 출장 후 테스트 예정<pre><code>@결과 :  중국에서 push 발행하더라도 느림. 바이두 푸시 자체가 구글처럼 빠릿하게 동작하지 않음 (CheckDate - 2018.09.10 In 북경 )</code></pre></li></ul><p>   <strong> 바이두 푸시 서버 개발 팁</strong></p><pre><code>- deviceType 3 : Android - deviceType 4 : IOS- messageType 0 : Baidu SDK에서 노티피케이션을 직접 생성하지 않음.                   - Android onMessage(...) 함수에서 CustomContent 필드 사용 불가.                  - Android OnClick(...) 함수 호출하지 않음.</code></pre><ul><li>messageType 1 : Baidu SDK에서 노티피케이션을 직접 생성. <pre><code>- CustomContent 필드 사용 가능함.</code></pre></li></ul><p> <strong>바이두 푸시 Android 삽질 팁</strong></p><pre><code>- 한국에서 푸시가 느리게 오거나 안오는 경우 네트워크 상태 변경을 하면 밀려 있던 푸시가 생성됨.     : 확인된 케이스          1. 3G ,wifi 연결 -&gt; Wifi Off  == 밀려 있던 푸시가 OnMessage함수를 타고 노티피케이션 생성.         2. 유심없음, Wifi 연결 -&gt; Wifi Off == 밀려 있던 푸시가 OnMessage함수를 타고 노티피케이션 생성.</code></pre><ul><li>푸시가 빨리 도착하는 시간대는 아침 시간대. 확인된 케이스는 없으며 경험에 의한 추측.<br> : 푸시 메시지 페이로드를 설계 할때 발송된 푸시가 늦게 도착하는 경우 개발에 차질이 생김<pre><code>(이때 보낸 푸시 내부에 어떤 페이로드로 보냈는지 햇갈림)</code></pre>  : 따라서 아침 시간대에 테스트 하면 좀더 수월함.</li></ul><p><strong>바이두 푸시 SDK로 개발된 앱을 타 마켓(360, Tencent 등)에 등록이 가능한가?</strong><br>@결과 :<br>: 이게 제일 중요함. 만약 이게 안되면 각 스토어별 푸시를 구현해야 햐고, 푸시뿐만아니라 리포팅 툴도 안된다는 얘기.<br>   즉, BuildScript 으로 분리하기 어려워질 수있고, 프로젝트 파편화가 생길 수 있다. </p><p>  이 불확실성을 해결 하려면 역시 마켓에 앱을 등록해야 하는데. ICP 비안이 필요하다. 즉, 중국에 앱을 배포 하려 시도하는 업체라면<br>   SDK 다운받고 ,개발하고, 기획 하고 이런것 보다 우선 ICP 비안 먼저  발급 신청을 해라.<br>  단언코 말하건데, 개발 먼저하고 그때가서 ICP 발급 받은 뒤에 앱 스토어에 올리려고 하면 이래서 안됨 저래서 안됨. 리젝으로 후들겨 까이고<br>  이미 개발된 소스를 거의 전부 수정해야 할 수 있다<br>  중국 마켓의 정책은 수시로 바뀌며 트랜드도 변화무쌍하다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;결제-문화&quot;&gt;&lt;a href=&quot;#결제-문화&quot; class=&quot;headerlink&quot; title=&quot;결제 문화&quot;&gt;&lt;/a&gt;결제 문화&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;오프라인 식당&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;음식점 테이블
      
    
    </summary>
    
    
      <category term="Android중국" scheme="https://shin-beomchul.github.io/tags/Android%EC%A4%91%EA%B5%AD/"/>
    
  </entry>
  
  <entry>
    <title>rx-RxJava2(작성중 1단계)</title>
    <link href="https://shin-beomchul.github.io/2018/06/21/hex-Rx/rx-RxJava2/"/>
    <id>https://shin-beomchul.github.io/2018/06/21/hex-Rx/rx-RxJava2/</id>
    <published>2018-06-21T11:18:14.000Z</published>
    <updated>2018-07-02T11:48:56.917Z</updated>
    
    <content type="html"><![CDATA[<p>포스팅 순서.</p><p>1단계. 코딩 중 중요 키워드 막 적기.<br>2단계. 정리</p><p><strong>Observable은 스레드에서 각각 모두 독립적이다.</strong><br>합성 함수나 조작합수에서 스레드를 block/ Async 함.</p><p>Observable은 각각의 스레드 지정이 가능함.<br>zip(ob1, ob2) : ob1,ob2 의 동작 스레드를 서로 다르게 지정 가능함.</p><p><strong>구독(subscribe)은 Consumer,Observer가 할 수 있다.</strong><br> Consumer는 onNext(t)만 가짐.<br> Observer는 4개의 메소드를 가짐. 구독시작,아이템,에러,완료</p><p><strong>Subject 한줄 요약</strong><br> AsyncSubJect : onComplete 호출 이전 발행 데이터를 구독자에게 마지막 데이터를 알림.<br>  즉. 구독자(옵서버,컨슈머)의 개입 시점이나 아이템 발생 시점이 아니라는 것이다.<br>      AsyncSubJect에서 구독자들에게 전달 되는 시점은 오직 onComplete가 호출 되기 전 마지막 발행한 아이템 인것이다.</p><p>PublishSubject : 생방송, 아이템  발행 중 구독자가 조인 되는 순간 구독 시작<br> 적용 생각 : 센서 데이터를 발행(받아들이고)하고, 여러 구독자(센서 정보 컨버팅 모듈)<br>  ex) </p><p>BehaviorSubject : 가장 최근 값 또는 기본값을 넘겨주는 클래스<br>ReplaySubject  : VOD </p><p> <strong>매번 혼동스러운 핫 콜드 옵져버블</strong></p><p> hot: 구독자을 여러개 등록 할 수 있음.<br> Cold:     </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;포스팅 순서.&lt;/p&gt;
&lt;p&gt;1단계. 코딩 중 중요 키워드 막 적기.&lt;br&gt;2단계. 정리&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Observable은 스레드에서 각각 모두 독립적이다.&lt;/strong&gt;&lt;br&gt;합성 함수나 조작합수에서 스레드를 block/ Asyn
      
    
    </summary>
    
    
      <category term="RxJava2" scheme="https://shin-beomchul.github.io/tags/RxJava2/"/>
    
  </entry>
  
  <entry>
    <title>품질관리</title>
    <link href="https://shin-beomchul.github.io/2018/05/24/hex-etc/etc-%E1%84%91%E1%85%AE%E1%86%B7%E1%84%8C%E1%85%B5%E1%86%AF%E1%84%80%E1%85%AA%E1%86%AB%E1%84%85%E1%85%B5/"/>
    <id>https://shin-beomchul.github.io/2018/05/24/hex-etc/etc-품질관리/</id>
    <published>2018-05-24T00:05:28.000Z</published>
    <updated>2018-07-02T11:49:32.733Z</updated>
    
    <content type="html"><![CDATA[<p><strong>SW 품질관리</strong></p><p><strong>SW Quality Insight</strong><br> 지속적인 품질 및 서비스 개선없이는 시장에서 성장 할수 없다.<br> 중요 프로젝트 성공 요인</p><ul><li>1위 : 명확하 요구사항 및 몇세.<ul><li>2위 : 목적, 목표 설정 및 범위 산정</li><li>3위 : 현실적인 일정 수립 및 관리</li></ul></li></ul><p>품질관리 체계<br>SW품질<br>품질관리 역량<br>교육<br>자산관리</p><p><strong>SW Process &amp; Standard</strong><br>세상에서 가장 여려운일은 세상을 바꾸는 것이 아니라 당신 자신을 바꾸는 것이다. - 넬슨 만델라</p><p> 자신이 일하던 프로세스를 현제 상황에 맞는 프로세스에 맞추는것이 어렵다.</p><p> <strong>process란?</strong> : 일련의 과제가 처리되는 논리적 흐름.</p><ul><li>입력(요구사항 정의서, 개발에 필요한 것들)</li><li>아웃풋 (소스코드,프로그램)</li><li>SP? : NIPA 에서 소프트웨어 프로세스 인증.(www.kssn.net) 각 분야의 품질 모델은 다양하다. 의료장비 IEC60601,IEC62304 ..</li></ul><p><strong>다양한 품질 인증기관</strong></p><p>SP : CMMI 를 많이 참조 했으며, 국내 인증표준임.<br>CMMI : 개발프로세스 성숙도 3단계 까지 받으면 광고할 수도 있음.<br>SO/IEC12207 :SW 수명주기 Framework<br>기본 프로세스 : 획득(외주),공급(타회사로 납품)<br>PMBOK : PM 관련인증]</p><p>폭포수모델<br>요구사항 : 요구사항 명세서<br>설계 : 설계 명세서<br>구현<br>테스트<br>유지보수</p><p>V 모델 : 구명주기 초반에 테스팅이 일어나도록 정의한 모델.<br> 폭포수모델과 다른점. 테스트 단계를 각 단계별 테스트를 함.<br> 요구 분석 - 인수테스틍<br>기본 설계 - 시스템 테스팅<br>상세 설계 - 통합 테스팅<br>구현 - 단위 테스팅</p><p><strong>Quality Assurance</strong><br>  관리자들은 그때 그떄 발생된 문제 해결에 초점을 두고 있다.<br>  무리한 일정으로 인해 제품의 기능과 품질을 타협하는 한다<br>ㄴ#SW품질이란?<br> Qualty (좁은의미)<br>  요구명세에 부합되는 SW</p><p>#Qualty (넓은 의미)<br> 사용자가 만족하는, 고객이만족 하는 SW </p><p>결함 발생시 즉시 해결 : 결함은 각 단계를 넘어 설수록 기하급수적으로 증가하기 때문<br>설계 단계 이전에 에서 결함을 찿아내는것이 중요.<br>리뷰 수행 (동료 검토) </p><p>#SW는  시간 , 비용 , 품질 3가지가 잘 조합해야 함.</p><p>#품질비용의 3가지</p><p>예방교육 : 교육훈련, 품질계획 , 방법론 및 절차서 정립<br>평가비용 : 검사, 시험,검토 등에 서요되는 비용<br>실패비용 : 결함을 고객이 찿는것.</p><p>#QC는 제품에 초점</p><ul><li><p>리뷰, 테스트를 이용 제품의 품질을 체크</p><p>#QA는 프로세스에 초점<br>프로세스 수행 작업을 체크. 프로세스 관리, 소프트웨어 관리</p><p>테스팅의 정의</p><p>하나 또는 여러 테스트 케이스의 집합[IEEE 829]<br> 오류를 찿기위해 프로그램을 실행하는 과정</p><ul><li>오류를 찿는 파괴적인 과정<br>: 파괴적 ? 개발자는 긍정 테스트만 진행한다. 의도한 대로 테스트 하는것이 아니라 마구 테스트 하는것.<br>my - 기능구현한 담당자와 바꿔서 테스트 필요.</li></ul></li></ul><pre><code>정적/동적 테스트의 차이동적 : 개발대상 프로그램을 실행 시키면서 수행 하는 것정적 : 소스코드 문제점만 분석(문서리뷰 등)</code></pre><p><strong>테스트를 왜?</strong><br>결함 식별과 제거<br>리스크 감소<br>리스크 : 현실화되지 않은 위험요소<br>이슈 : 현실화가 되서 터진일.<br>시스템 품질 향상<br>품질 수준의 평가 개선<br>시스템 신뢰도 향상<br>고객만족 증대<br>재작업 비용 감소<br>생산성 증가</p><p><strong>표준의 기본용어</strong><br>결함 : 버그, 요구 기능을 수행하지 못하게 하는 컴토넌트나 시스템 상의 결점</p><p>장애 : 배포,서비스 결과와는 다른 컴포넌트나 시스템의 일탈.</p><p>인시던트 : 테스트 과정에서 발생하여 조사가 필요한 이벤트<br> 결험이라고 판정 받기전까지 인시던트 상태</p><p><strong>결함과 장애</strong></p><ul><li>사람의 실수로 <strong>결함</strong>이 유입되고 결함 요소가 실행될 때 <strong>장애</strong> 발생 가능성.(장애를 발견 할수도 발견하지 않을수도.)</li></ul><p> <strong>테스트의 한계성</strong><br>  1.입력 값의 다양성</p><ol><li>파라미터 조합의 다양성</li><li><p>기능 실행 흐름의 다양성</p><p><strong>효과성과 효율성의 차이.</strong><br>효과성 : 원하는 목적을 달성 했을 때.<br>: 테스트 <strong>전략</strong>, 기법,도구 적용이 필요.</p><p>효율성 : 목표 달성을 하긴 했는데 시간(자원)을 적게 써서 달성.<br>: 도구 자동화,프로세스의 체계화</p><p><strong>제3자 테스트의 중요성</strong><br>테스트의 독립성 확보</p><p><strong>테스트 기준</strong><br>건설적 관점의 코딩 작업 이후 파괴적 관점의 작업은 매우 어렵다.<br>오류가발견되지 않을 것이라는 암묵적 가정하에 테스트를 해선 안됨.<br>오류 존재 가능성은 구부분에서 발견된 오류의 수에 비례 (오류가 난 곳은 계속 난다)</p></li></ol><p>   <strong>테스팅의 7가지 원칙</strong><br>   결함 존재를 밝히는것.<br>   완벽한 테스팅은 불가능<br>   초기 테스팅 : 가급적 초기에 테스트를 진행 할것.<br>   결함 집중 : 한번 겨함 발생시 주변 다시 한번<br>   살충제 패러독스 : 집에 바퀴벌레 발견 시 바퀴 벌레 패치 붙히면 다른쪽에 나타남.<br>   : 유사 테스트 케이스가 많다고 좋은게 아니라는 말, 다양한 케이스를 만들어야함.<br>   정황에 의존<br>   오류-부재의 궤변<br>   : 원하는 기능이 있는 오류 나는 프로그램 vs  완벽하나 기능이 별로임.<br>    <strong>우리 SW는 완벽하니까 우리 제품을 써라. 씨알도 안먹힌다는 소리.</strong><br>    <strong>1원칙은 기능과 편의성임</strong></p><p><strong>품질 향상을 위한 설천법</strong><br> “기업의 니즈를 충족시킬 수 있고, 사용자가 만족하며 결함이 적은 SW “</p><p> 테스트 발전과정<br> 디버깅<br> 증명<br> 파괴<br> 평가<br> 예방<br> 위험 위주 (위험관리) :  리스크 기반</p><p> <strong>수명주기 모델</strong><br> 폭포스<br> 나선형<br> V : 테스트 강조<br> 확인/검증의 차이<br> : 확인 = 사용자 기준<br>   검증 = 개발팀 기준 명세서에 따라 만드는 사람 요구사항에 맞게 잘 만들고 있는지<br>   요구사항,고객의 요구사항이 잘 반영되었는지 확인 하는과정.</p><p> 애자일 : 요구사항 추가에 대한 유연한 대응을 위한 모델<br> <strong>XP</strong> : 짧은 주기의 반복적 개발 1주~2주<br> <strong>스크럼</strong> : 애자일 테스팅? 테스트에 접근법임 애자일은 특정 기법이 아님<br>  백로그, 스프린트 백로그 스프린ㄴ트(3~4주)<br>  <strong>칸반</strong> : 스크럼이 가지는 문제: 빌드,장애 조치에 대한 스트레스를 보완(일정압박이 심한것) my - trello<br>           칸반 보드로 가시화함. 쪼는게 아니라 각 스텝간 어느정도만 있어야함.WIP 제한<br>            작업 흐름의 측정과 관리</p><p> <strong>DevOps</strong> 도구 자동화 기반 (애자일 개발 +CI + CD ) 자동화가 중요함.<br>  중단 없음. 개발-&gt; 테스트-&gt;배포 모두 자동화.</p><p>  가치와 목적<br>  서로의 존중<br>  공동의 소유권<br>  팀의 목적공유 품질 정의 가시성투명성 확보</p><p>  프로세스<br>  빨리 자주 사용자에게 변경된 배포</p><p>  도구<br>  자동화 지향</p><p>  테스트 레벨 기본적인4가지 테스트<br>  단위 통합 시스템 인수</p><p>  테스트의 종류<br>  단위 : 내가 구현하는 기능 - 사용자 주도<br>  통합 통합/인터페이스 시스템과의 결합시 발견 될수 있는 결함 테스트 개발자/테스터<br>  시스템 테스트<br>  완성 시스템의 기능과 비기능 결함을 제거. (시스템 테스트 단계만 국한 되는 것은 아님) 3자 테스트<br>  인수 테스트 : 고객 요구사항 만족 인수기준 충족 여부 - 사용자</p><p> <strong>단위 테스트란?</strong><br> 구현 완료 코드에 대한 테스트<br> 연관 클래스 인터페이스 분리. 테스트 대상 격리 후 테스트</p><ul><li><p>TDD와 다른 개념.</p><p>테스트 드라이버 : 테스트 스뮬레이터<br>구현모듈 : 단위 테스트 대상<br>테스트 스텁 : 테스트 시뮬레이터</p><p><strong>통합테스트란?</strong><br>빅뱅통합 :한방에 : 빠름<br>점진적 통합 : 찔찔이 조금씩. ㄱ문제점 찿기 쉬움</p><p>인수<br>알파 : 내부 조직<br>베타 : 조직 외부, 잠재 고객 대상(게임 베타 유저), 필드 테스트 라고도 함.</p></li></ul><p> 변경으로 인한 부작용 테스트 / 환경의 변화 되었을때  :테스트  리그레이션 테스팅 :회귀 테스트<br>  변경의 가능성이 높지 않고, 반복의 가능성이 높을 경우 자동화가 적합함.</p><p> 기능 : 시스템의 동작검증, 모든 테스트 레벨에서수행 가능</p><p> 비기능 테스트 : 기능을 어떻게<br> 정량화</p><p> 긍적 테스트<br> 유효 데이터를 활용</p><p> 부정<br> 비유효한 데이터를 활용<br> 잘안될것을 예상하고 이상한 값에 대한 결과값과 잠재 결함 제거</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;SW 품질관리&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SW Quality Insight&lt;/strong&gt;&lt;br&gt; 지속적인 품질 및 서비스 개선없이는 시장에서 성장 할수 없다.&lt;br&gt; 중요 프로젝트 성공 요인&lt;/p&gt;
&lt;ul&gt;
&lt;li
      
    
    </summary>
    
    
      <category term="etc" scheme="https://shin-beomchul.github.io/tags/etc/"/>
    
  </entry>
  
  <entry>
    <title>사내 세미나  - MySQL Tips</title>
    <link href="https://shin-beomchul.github.io/2018/05/18/hex-etc/etc-database/"/>
    <id>https://shin-beomchul.github.io/2018/05/18/hex-etc/etc-database/</id>
    <published>2018-05-18T08:02:22.000Z</published>
    <updated>2018-05-20T15:40:28.826Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 쿼리 작성 유의사항</strong></p><p>whre<br>group b<br>dis<br>order</p><p>너무 많은 인덱스는 성능 , 용량 부족의 원인.<br>5.7깆 ㄴ 오름차순 내림차순 정렬이 안됨.</p><p><strong>묵시적형변환</strong><br> 디비같은 경우 묵시적 형변환이 이뤄짐.<br>내부적으로 변환이 이뤄짐. 우선순위가 높은타입으로 형이 자동 변환.</p><p> 자바 스크립트같은 정적 타이핑 언어가 아닌 언어에서 호출할때 평변환을 명시적으로 해주는것이 좋음<br>잘못하면 인덱싱이 느려질 수 있음.</p><p>연산자 앞에 %LIKE 를 붙히면 인덱싱이 불가능. -&gt; 풀 스캔을함.<br>: 해결 방법 뒤에 붙혀라.</p><p> <strong>where 절에서인덱스 사용방법</strong><br> 1.범위 제한 조건</p><ol><li><p>체크 조건<br>ㅂ<br>동등조건을왼쪽으로 미루자.</p><p><strong>Limit</strong><br>where과 함께사용시 where를 풀 스캔하고 잘라냄.</p><p><strong>유니온</strong><br>중복제거가 중효하지않으면 유니온 올</p><p><strong>서브쿼리</strong><br>from 절에 서브쿼리 자제할것. 필요 할때 말고는 쓰지말것.<br>해결 : 조인으로 대체 할 수 있으면 조인으로 대체 할것.</p><p><strong>JOIN</strong><br>순서중요, 옵티마이젹가 어느정도 해줌</p><p><strong>Float</strong></p><p>저장 시 고정소수점을 곱했을 때는 어느정도 명확하지만,<br>고정 소수점이 아닌 경우 어떤 값과 곱했을 경우 값이 달라질 수 있음.</p><p>값이 달라지는 이유 :<br>컴퓨터는 IEEE754 형태  이진형식으로 부호화 이때 이진수는 모든 10진수를 표현하지 못할 수도 있음. 이때 값이 변형 될 수 있음.</p><p>예)  클라이언트와 서버와 이진처리방식이 달라 케릭터가 죽고  안죽고가 결정 될 수 있음.</p><p>해결 : 고정소수점을 이용해서 소수점 2자리 까, 4자리까지 정책을 둬서 저장.</p></li></ol><p><strong>인덱스관련 심플 마무리</strong><br> 올 인덱스맨 풀스캔을 한다.<br> 올 : 풀스캔<br> 인덱스 : 인덱스 풀스캔<br> : 인덱스 재구성, 쿼리 수정.</p><p>: Oracle 과 MySql 쿼리의 비교<br>  안시표준을 따르는게 좋다<br>  서브쿼리에 alias가 붙혀야 신텍스 에러 안남.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 쿼리 작성 유의사항&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;whre&lt;br&gt;group b&lt;br&gt;dis&lt;br&gt;order&lt;/p&gt;
&lt;p&gt;너무 많은 인덱스는 성능 , 용량 부족의 원인.&lt;br&gt;5.7깆 ㄴ 오름차순 내림차순 정렬이 안됨.&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="세미나 기록" scheme="https://shin-beomchul.github.io/tags/%EC%84%B8%EB%AF%B8%EB%82%98-%EA%B8%B0%EB%A1%9D/"/>
    
  </entry>
  
  <entry>
    <title>ios를 시작하는 사람들을 위한 유용한 링크 모음</title>
    <link href="https://shin-beomchul.github.io/2018/05/18/hex-IOS/ios-Link/"/>
    <id>https://shin-beomchul.github.io/2018/05/18/hex-IOS/ios-Link/</id>
    <published>2018-05-18T04:59:23.000Z</published>
    <updated>2018-10-15T06:54:47.658Z</updated>
    
    <content type="html"><![CDATA[<p><strong>화면 전환 Segue</strong><br><a href="https://m.blog.naver.com/jdub7138/220393890771" target="_blank" rel="noopener">https://m.blog.naver.com/jdub7138/220393890771</a></p><p><strong>x코드업데이트 후 libstd6++관련 에러 날 경우</strong></p><ol><li>다운로드 : <a href="https://github.com/Kila2/libstdc-.6.0.9.tbd" target="_blank" rel="noopener">https://github.com/Kila2/libstdc-.6.0.9.tbd</a></li></ol><p>2.다운로드 lib 및 파일 해당경로 복사.<br>iPhoneOS 폴더 라이브러리들 해당 경로애 복사(copy the file: (libstdc++.6.0.9.tbd) and (libstdc++.6.tbd) to )<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/usr/lib</span><br></pre></td></tr></table></figure></p><p>iPhoneSimulator 폴더 라이브러리들 해당경로에 복사.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/lib</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;화면 전환 Segue&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;https://m.blog.naver.com/jdub7138/220393890771&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://m.blog.na
      
    
    </summary>
    
    
      <category term="IOS" scheme="https://shin-beomchul.github.io/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>kotlin - 인터페이스없는 콜백</title>
    <link href="https://shin-beomchul.github.io/2018/05/18/hex-kotlin/kt-CallBack/"/>
    <id>https://shin-beomchul.github.io/2018/05/18/hex-kotlin/kt-CallBack/</id>
    <published>2018-05-18T00:26:22.000Z</published>
    <updated>2018-08-06T08:58:27.982Z</updated>
    
    <content type="html"><![CDATA[<p><strong>한줄 요약 : 코틀린 사용 하는데 콜백 인터페이스 무조건 만들지 마세요.<br>                   때에 따라서 사용과 동시에 인터페이스를 만들 수 있습니다</strong></p><p><strong>java에서 콜백을 지정 하려면 콜백 인터페이스를 지정하고 ,<br>함수 선언 단계에서  반환 값으로을 지정하는 다음과 같은 2단계가 필요 했습니다</strong></p><ol><li>콜백 인터페이스 선언</li><li>함수에서 콜백 파라미터로 선언</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//콜백 인터페이스 선언</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Callback</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(ResultType result)</span></span>;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">onError</span> <span class="params">(Exception exception)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">함수에서 콜백 파라미터로 선언</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getAccountAPI</span><span class="params">(Callback callback)</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">     <span class="comment">//API Call ...     </span></span><br><span class="line">     </span><br><span class="line">    callback.onSuccess(myResult);</span><br><span class="line">    callback.onError(e)</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//사용</span></span><br><span class="line">Retrofit.getAccountAPI(<span class="keyword">new</span> Callback() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(ResultType result)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Exception e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>코틀린 : 함수 선언과 동시에 함수형 인터페이스 선언</strong></p><ol><li>함수에서 콜백 파라미터로 선언 &amp;&amp; 콜백 선언 </li></ol><p>함수형 인터페이스를 함수 선언과 동시에 즉시 명시 가능.<br>이렇듯 코틀린의 콜백에서 선언되지 않았는데 전달되는 것을 람다 또는 익명 함수라고 부르며, 있어 보이게<br>“functional literal” 라고 부릅니다.</p><p><strong>코틀린 콜백 - 선언</strong><br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">함수에서 콜백 파라미터로 선언 &amp;&amp; 콜백 선언 </span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getAccountAPI</span><span class="params">(onSuccess: (<span class="type">result</span>)</span></span> -&gt; <span class="built_in">Unit</span>, onError: (Throwable) -&gt; <span class="built_in">Unit</span>)&#123;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//call Async API </span></span><br><span class="line"> ...</span><br><span class="line"> onSuccess(myResult) </span><br><span class="line"> </span><br><span class="line"> ...</span><br><span class="line"> onError(e) </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>코틀린 콜백 - 사용</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">retorift.getAccountAPI(&#123; result -&gt;</span><br><span class="line">   <span class="comment">//Success</span></span><br><span class="line"></span><br><span class="line"> &#125;, </span><br><span class="line"> &#123; error -&gt;</span><br><span class="line">   <span class="comment">//Error</span></span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><p><strong>이게 뭔가요?</strong><br>함수형 인터페이스를 코틀린 문법으로 선언과 동시에 작성한 형태<br>즉 </p><p>onSuccess: (result) -&gt; Unit 의 문법을</p><p>Java로 유사하게 작성 할 경우 다음과 같은 인터페이스의 형태 일 겁니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;한줄 요약 : 코틀린 사용 하는데 콜백 인터페이스 무조건 만들지 마세요.&lt;br&gt;                   때에 따라서 사용과 동시에 인터페이스를 만들 수 있습니다&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;java에서 콜백을
      
    
    </summary>
    
    
      <category term="Kotlin" scheme="https://shin-beomchul.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>ios시작</title>
    <link href="https://shin-beomchul.github.io/2018/05/17/hex-IOS/ios-start/"/>
    <id>https://shin-beomchul.github.io/2018/05/17/hex-IOS/ios-start/</id>
    <published>2018-05-17T04:32:47.000Z</published>
    <updated>2018-07-04T06:37:20.036Z</updated>
    
    <content type="html"><![CDATA[<p>빌드 </p><p><strong>핸드폰 빌드 순서</strong></p><ol><li>빌드 시 인증서 확인 -&gt; 인증서 프로비져닝 매칭 체크 -&gt; 빌드   Success</li></ol><p><strong>App id</strong> 패키지명으로 생성.<br>: 앱을 등록</p><p><strong>인증서</strong> 프로젝트를 개발, 발드, 배포 할수 있는 인증서<br>: dev, Dest : 푸시용 인증서 앱용 인증서 라고 부름<br>  (개발자등록되어 있나 안되어있나 확인하기 위한 용도)</p><p>: (개발인증서 발급으로 만듬)<br>주의사항 : 인증서를 웹에서 말소시켜 버리면 개발자는 다 못씀.<br>일반적으로 여려명의 개발자 일경우 1명이 관리함.</p><p><strong>프로비져닝</strong> :  기기에서 빌드 할 수 있는 권한을 가진 인증서.<br> 위 인증서로 발급된 인증서와 쌍을 이룬다.</p><p><strong>Story Board</strong></p><ul><li><p><strong>인터페이스 빌더</strong> : 드래그 앤 드랍으로 화면 구성</p></li><li><p><strong>Main.storyboard</strong>는 :앱에서의 전체 화면</p></li></ul><ul><li><p><strong>LaunchScreen.storyboard</strong> : 앱이 실행되기 전에 보이는 스플래시Splash 화면</p></li><li><p><strong>View Controller</strong>  : iOS 앱에서 사용되는 화면 단위 (간략히 이해하면)</p></li><li><p><strong>Auto Layout</strong>  : 의 위치와 크기를 절대 수치로 직접 넣지 않고, 관계만을 정의<br> : 제약Constraint 상하좌우 거리를 0으로 만드는 제약을 걸면 Full<br>   스토리보드에서는 핀Pin 버튼(pin)을 사용해서 오토 레이아웃 제약을 추가 </p><pre><code>제약을 걸고 뷰를 마음대로 움직여도 반영되지 않음 (제약 &gt; 뷰배치)</code></pre></li><li><p><strong>@IBOutlet</strong>  : 해당 키를 붙히면 라인넘버 확인 줄에 동그라미가 표시됨 . </p><pre><code> 속성이 인터페이스 빌더와 연결되어 있는지 확인  연결 : 채워짐. 연결되지 않음 : 빈 동그라미 **방법**  1. storyboard 열기2.뷰 클릭3. 오른쪽 상단 -&gt; 클릭4.referefcing Outlets + 드래그 5. 드래그 ~ viewController.swift 까지 끌음.6. 라인에 동그라미 채워짐 확인.</code></pre><p>  <strong>segue</strong>  :  화면이동 개념을 지칭 (세그웨이)</p><ul><li><strong>prepareForSegue</strong> : 화면 이동전 준비 작업 A-&gt;B 이동 한다고 할때 A에서 구현.<br>: 준비란?<br>  어느세그웨이가 실행 될지<br>  어느세그웨이가 실행되면 이동할화면<br>  화면 B의 어느 데이터를 어떻게 변경 할것 인가</li></ul></li></ul><pre><code>Color </code></pre><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">UIColorFromHex</span><span class="params">(rgbValue:UInt32, alpha:Double=<span class="number">1.0</span>)</span></span>-&gt;<span class="type">UIColor</span> &#123;</span><br><span class="line">   <span class="keyword">let</span> red = <span class="type">CGFloat</span>((rgbValue &amp; <span class="number">0xFF0000</span>) &gt;&gt; <span class="number">16</span>)/<span class="number">256.0</span></span><br><span class="line">   <span class="keyword">let</span> green = <span class="type">CGFloat</span>((rgbValue &amp; <span class="number">0xFF00</span>) &gt;&gt; <span class="number">8</span>)/<span class="number">256.0</span></span><br><span class="line">   <span class="keyword">let</span> blue = <span class="type">CGFloat</span>(rgbValue &amp; <span class="number">0xFF</span>)/<span class="number">256.0</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="type">UIColor</span>(red:red, green:green, blue:blue, alpha:<span class="type">CGFloat</span>(alpha))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>사용</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.view.backgroundColor = <span class="type">UIColorFromHex</span>(<span class="number">0x323232</span>,alpha: <span class="number">1</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;빌드 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;핸드폰 빌드 순서&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;빌드 시 인증서 확인 -&amp;gt; 인증서 프로비져닝 매칭 체크 -&amp;gt; 빌드   Success&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;App id&lt;/str
      
    
    </summary>
    
    
      <category term="IOS" scheme="https://shin-beomchul.github.io/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>kotlin- 잘 정리된 link 모음</title>
    <link href="https://shin-beomchul.github.io/2018/05/17/hex-kotlin/kt-link/"/>
    <id>https://shin-beomchul.github.io/2018/05/17/hex-kotlin/kt-link/</id>
    <published>2018-05-17T02:14:32.000Z</published>
    <updated>2018-05-28T08:27:36.327Z</updated>
    
    <content type="html"><![CDATA[<p>코틀린 생성자 (기본 생성자와 인수가 여러개인 생성자)<br><a href="https://thdev.tech/kotlin/2017/03/09/Kotlin-Constructor-Init.html" target="_blank" rel="noopener">https://thdev.tech/kotlin/2017/03/09/Kotlin-Constructor-Init.html</a></p><p>코틀린 Annotation + ButterKnife 시 All BindView 에러시 해결 방안.<br><a href="https://github.com/JakeWharton/butterknife/issues/463" target="_blank" rel="noopener">https://github.com/JakeWharton/butterknife/issues/463</a></p><p>요약<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">1. kapt 추가</span><br><span class="line">  &apos;com.jakewharton:butterknife-compiler:8.8.1&apos; //err</span><br><span class="line">  kapt &apos;com.jakewharton:butterknife-compiler:8.8.1&apos; // replace it</span><br><span class="line">  </span><br><span class="line">2. apply plugin: &apos;kotlin-kapt&apos; 플러그인 추가</span><br><span class="line"></span><br><span class="line">3. stubs true 추가</span><br><span class="line"></span><br><span class="line">    android&#123;</span><br><span class="line">        ...</span><br><span class="line">            kapt &#123;</span><br><span class="line">            generateStubs = true</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;코틀린 생성자 (기본 생성자와 인수가 여러개인 생성자)&lt;br&gt;&lt;a href=&quot;https://thdev.tech/kotlin/2017/03/09/Kotlin-Constructor-Init.html&quot; target=&quot;_blank&quot; rel=&quot;noopen
      
    
    </summary>
    
    
      <category term="Kotlin" scheme="https://shin-beomchul.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>ios-클로져, 클래스,구조체,튜플</title>
    <link href="https://shin-beomchul.github.io/2018/05/16/hex-swift/ios-closure-class-tuple/"/>
    <id>https://shin-beomchul.github.io/2018/05/16/hex-swift/ios-closure-class-tuple/</id>
    <published>2018-05-16T06:16:46.000Z</published>
    <updated>2018-05-16T08:29:48.002Z</updated>
    
    <content type="html"><![CDATA[<p><strong>함수</strong><br>함수의 반환타입 지정: -&gt;<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hello</span><span class="params">(name:String)</span></span> -&gt; <span class="type">String</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> retStr = <span class="string">""</span></span><br><span class="line">  <span class="keyword">return</span> string +=(name)님 안녕하세요!</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Swift 에서 함수를 호출 할때 파라미터 이름을 함께 써줘야함</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">hello(name: <span class="string">"신범철"</span>)</span><br></pre></td></tr></table></figure><p><strong>함수 호출 시 이름을 바꾸고 싶다.</strong><br> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> hello(mycallName: <span class="string">"신범철"</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hello</span><span class="params">(mycallName name: String)</span></span> &#123;</span><br><span class="line"><span class="comment">// 함수 내부에서는 `name`을 사용.</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p> <strong>함수 호출 시 생략 하고 싶다</strong><br> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> hello(<span class="string">"신범철"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hello</span><span class="params">(<span class="number">_</span> name: String)</span></span> &#123;</span><br><span class="line"><span class="comment">// 함수 내부에서는 `name`을 사용.</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p> <strong>클래스</strong><br> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> name: <span class="type">String</span>?</span><br><span class="line"> <span class="keyword">var</span> age: <span class="type">Int</span>?</span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">simpleDescription</span><span class="params">()</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> name = <span class="keyword">self</span>.name &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"dog \(name)"</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"dog No name"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p> <strong>구조체</strong></p> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">Coffee</span> </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> name: <span class="type">String</span>?</span><br><span class="line"> <span class="keyword">var</span> size: <span class="type">String</span>?</span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">simpleDescription</span><span class="params">()</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> name = <span class="keyword">self</span>.name &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"☕️ \(name)"</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"☕️ No name"</span></span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <strong>튜플</strong><br> 배열과 비슷, 다른점은 크기가 고정 접근 할 때 [0] 대신 .0 으로 접근<br> : 구조체와 유사. 간단한 자료형을 만들때 구조체 대신 사용.</p><p> 기본<br> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> coffeeInfo = (<span class="string">"아메리카노"</span>, <span class="number">5100</span>)</span><br><span class="line">coffeeInfo.<span class="number">0</span> <span class="comment">//아메리카노</span></span><br><span class="line">coffeeInfo.<span class="number">1</span> <span class="comment">// 5100</span></span><br><span class="line">coffeeInfo.<span class="number">1</span> = <span class="number">5200</span></span><br></pre></td></tr></table></figure></p><p> 이름이 있는 튜플</p> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> namedCoffeeInfo:(coffee:<span class="string">"아메리카노"</span>, price:<span class="number">5100</span>)</span><br><span class="line"></span><br><span class="line">namedCoffeeInfo.coffee <span class="comment">//아메리카노</span></span><br><span class="line">namedCoffeeInfo.price  <span class="comment">//5100</span></span><br><span class="line">namedCoffeeInfo.price = <span class="number">5200</span></span><br></pre></td></tr></table></figure><p> 튜플의 어노테이션<br> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> coffeeInfo: (<span class="type">String</span>, <span class="type">Int</span>)</span><br><span class="line"><span class="keyword">var</span> namedCoffeeInfo: (coffee: <span class="type">String</span>, price: <span class="type">Int</span>)</span><br></pre></td></tr></table></figure></p><p> 튜플의 응용 -상수화<br> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> (coffee, price) = (<span class="string">"아메리카노"</span>, <span class="number">5100</span>)</span><br><span class="line">coffee <span class="comment">// 아메리카노</span></span><br><span class="line">price <span class="comment">// 5100</span></span><br></pre></td></tr></table></figure></p><p> 튜플의 반환값<br> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> (coffee, price) = (<span class="string">"아메리카노"</span>, <span class="number">5100</span>)</span><br><span class="line">coffee <span class="comment">// 아메리카노</span></span><br><span class="line">price <span class="comment">// 5100</span></span><br></pre></td></tr></table></figure></p><p> 튜플의 기타</p><p> 튜플의 응용 -상수화<br> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> (coffee, price) = (<span class="string">"아메리카노"</span>, <span class="number">5100</span>)</span><br><span class="line">coffee <span class="comment">// 아메리카노</span></span><br><span class="line">price <span class="comment">// 5100</span></span><br></pre></td></tr></table></figure></p><p> Enum<br> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">enum</span> <span class="title">Month</span>: <span class="title">Int</span> </span>&#123;</span><br><span class="line"> <span class="keyword">case</span> january = <span class="number">1</span></span><br><span class="line"> <span class="keyword">case</span> february</span><br><span class="line"> <span class="keyword">case</span> march</span><br><span class="line"> <span class="keyword">case</span> april</span><br><span class="line"> <span class="keyword">case</span> may</span><br><span class="line"> <span class="keyword">case</span> june</span><br><span class="line"> <span class="keyword">case</span> july</span><br><span class="line"> <span class="keyword">case</span> august</span><br><span class="line"> <span class="keyword">case</span> september</span><br><span class="line"> <span class="keyword">case</span> october</span><br><span class="line"> <span class="keyword">case</span> november</span><br><span class="line"> <span class="keyword">case</span> december</span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">simpleDescription</span><span class="params">()</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">     <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">         <span class="keyword">case</span> .january:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"1월"</span></span><br><span class="line">         <span class="keyword">case</span> .february:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"2월"</span></span><br><span class="line">         <span class="keyword">case</span> .march:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"3월"</span></span><br><span class="line">         <span class="keyword">case</span> .april:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"4월"</span></span><br><span class="line">         <span class="keyword">case</span> .may:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"5월"</span></span><br><span class="line">         <span class="keyword">case</span> .june:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"6월"</span></span><br><span class="line">         <span class="keyword">case</span> .july:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"7월"</span></span><br><span class="line">         <span class="keyword">case</span> .august:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"8월"</span></span><br><span class="line">         <span class="keyword">case</span> .september:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"9월"</span></span><br><span class="line">         <span class="keyword">case</span> .october:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"10월"</span></span><br><span class="line">         <span class="keyword">case</span> .november:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"11월"</span></span><br><span class="line">         <span class="keyword">case</span> .december:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"12월"</span></span><br><span class="line">        &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">let</span> december = <span class="type">Month</span>.december</span><br><span class="line"> <span class="built_in">print</span>(december.simpleDescription()) <span class="comment">// 12월</span></span><br><span class="line"> <span class="built_in">print</span>(december.rawValue)            <span class="comment">// 12</span></span><br></pre></td></tr></table></figure></p><p>rawValue<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> october = <span class="type">Month</span>(rawValue: <span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(october) <span class="comment">// Optional(Month.october)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">Month</span>(rawValue: <span class="number">13</span>) <span class="comment">// nil</span></span><br></pre></td></tr></table></figure></p><p>다른언어와 다르게 String 과 같은 타입의 원시형을 갖는 Enum</p><p>사용예) API의 응답에서 내려주는 state의 값이 open 또는 closed라면, if-else 없이도 IssueState(rawValue:)를 사용<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">IssueState</span>: <span class="title">String</span> </span>&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">open</span> = <span class="string">"open"</span></span><br><span class="line"><span class="keyword">case</span> closed = <span class="string">"closed"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Enum의 생략 기능</p><p>Enum을 예측 할 수 있는 상황에서 Enum 이름 생략 가능</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> spoon: <span class="type">Spoon</span> = .gold <span class="comment">// 변수에 타입 어노테이션이 있기 때문에 생략 가능</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">doSomething</span><span class="params">(with spoon: Spoon)</span></span> &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">doSomething(with: .silver) <span class="comment">// 함수 정의에 타입 어노테이션이 있기 때문에 생략 가능</span></span><br></pre></td></tr></table></figure><p>연관 값 (Associated Values) 을 가지는 Enum</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">NetworkError</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> invalidParameter(<span class="type">String</span>, <span class="type">String</span>)</span><br><span class="line">    <span class="keyword">case</span> timeout</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> error: <span class="type">NetworkError</span> = .invalidParameter(<span class="string">"email"</span>, <span class="string">"이메일 형식이 올바르지 않습니다."</span>)</span><br></pre></td></tr></table></figure><p>사용</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">case</span> .invalidParameter(<span class="keyword">let</span> field, <span class="keyword">let</span> message) = error &#123;</span><br><span class="line">    <span class="built_in">print</span>(field) <span class="comment">// email</span></span><br><span class="line">    <span class="built_in">print</span>(message) <span class="comment">// 이메일 형식이 올바르지 않습니다.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> error &#123;</span><br><span class="line"><span class="keyword">case</span> .invalidParameter(<span class="keyword">let</span> field, <span class="keyword">let</span> message):</span><br><span class="line">    <span class="built_in">print</span>(field) <span class="comment">// email</span></span><br><span class="line">    <span class="built_in">print</span>(message) <span class="comment">// 이메일 형식이 올바르지 않습니다.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TODO </p><p>원문<br><a href="https://legacy.gitbook.com/book/devxoul/ios-with-swift-in-40-hours/details" target="_blank" rel="noopener">https://legacy.gitbook.com/book/devxoul/ios-with-swift-in-40-hours/details</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;함수&lt;/strong&gt;&lt;br&gt;함수의 반환타입 지정: -&amp;gt;&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa
      
    
    </summary>
    
    
      <category term="swift" scheme="https://shin-beomchul.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>start IOS - 변수,옵셔널</title>
    <link href="https://shin-beomchul.github.io/2018/05/16/hex-swift/ios-%E1%84%87%E1%85%A7%E1%86%AB%E1%84%89%E1%85%AE-%E1%84%8B%E1%85%A9%E1%86%B8%E1%84%89%E1%85%A7%E1%84%82%E1%85%A5%E1%86%AF/"/>
    <id>https://shin-beomchul.github.io/2018/05/16/hex-swift/ios-변수-옵셔널/</id>
    <published>2018-05-16T05:44:40.000Z</published>
    <updated>2018-05-16T08:33:41.558Z</updated>
    
    <content type="html"><![CDATA[<p><strong>목표</strong><br> Swift의 변수 선언과 optional 의 개념 이해.</p><p><strong>Swift의 타입 안정성</strong></p><ul><li>엄격한 정적 타이핑 언어 (타입에 대한 엄격성)</li><li>옵셔널<br>: 값이 있을 수도 있고 없을 수도 있는 것을 나타냄.</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str:<span class="type">String</span> = <span class="string">"가나다"</span> </span><br><span class="line"> str =<span class="literal">nil</span> <span class="comment">// 컴퍼알 에러 !</span></span><br></pre></td></tr></table></figure><p>그럼 nil을 어떻게 넣느냐?<br>: 옵셔널(?) 키워드를 변수를정의할때 붙힘.</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str:<span class="type">String</span>?</span><br><span class="line"></span><br><span class="line">str = <span class="string">"가나다"</span></span><br><span class="line"><span class="built_in">print</span>(str) <span class="comment">// 가나다 </span></span><br><span class="line"></span><br><span class="line">str = <span class="literal">nil</span>   </span><br><span class="line"><span class="built_in">print</span>(str) <span class="comment">// nil</span></span><br></pre></td></tr></table></figure><p>옵셔널 변수는 일반 변수와 근본적으로 완전히 다름.<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> optStr? =<span class="string">"옵셔널 스트링"</span></span><br><span class="line"><span class="keyword">let</span> ordnailStr = optStr <span class="comment">// 컴파일 에러</span></span><br></pre></td></tr></table></figure></p><p>optStr은 실제 코드가 실행 되기 전까지 값이 있는지 알 수 없음.</p><p>let : final<br>~~~swift</p><p>var name = “Suyeol Jeon”<br>let birthyear = 1995</p><p>birthyear = 1990 //error ! 컴파일 에러 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;목표&lt;/strong&gt;&lt;br&gt; Swift의 변수 선언과 optional 의 개념 이해.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Swift의 타입 안정성&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;엄격한 정적 타이핑 언어 (타입에 대한 엄격성)&lt;/li
      
    
    </summary>
    
    
      <category term="swift" scheme="https://shin-beomchul.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>hexo</title>
    <link href="https://shin-beomchul.github.io/2018/01/27/hex-etc/hexo/"/>
    <id>https://shin-beomchul.github.io/2018/01/27/hex-etc/hexo/</id>
    <published>2018-01-26T15:14:37.000Z</published>
    <updated>2018-01-28T08:32:40.682Z</updated>
    
    <content type="html"><![CDATA[<p>#Git Page로 정적 페이지 Hosting하기<br>Git Page를 통해 손쉽게 USERNAME.github.io 도메인을 통해 정적 페이지를 호스팅(Hosting) 할 수가 있습니다.</p><h3 id="Github-Repository-생성하기"><a href="#Github-Repository-생성하기" class="headerlink" title="Github Repository 생성하기"></a>Github Repository 생성하기</h3><p>먼저 Github에 가입한 후에 아래와 같은 순서로 Repository를 생성합니다.</p><ul><li>New Repository, Repository 이름은 USERNAME.github.io</li><li>USERNAME 은 Github의 가입시에 사용자의 username을 입력한다</li><li>Public / Private 중 Public 선택</li><li>Create Repository 버튼을 통해 Repository 생성</li></ul><h3 id="Clone-the-repository"><a href="#Clone-the-repository" class="headerlink" title="Clone the repository"></a>Clone the repository</h3><p>Github Repository 생성 이후에는 아래의 Command Line을 순차적으로 실행한다. 먼저 생성한 Repository를 로컬에 복사한다</p><p>$ git clone <a href="https://github.com/username/username.github.io" target="_blank" rel="noopener">https://github.com/username/username.github.io</a><br>Terminal 환경이 익숙하지 않다면 아래의 링크에서 Windows, Mac 운영체제별 클라이언트 프로그램을 통한 Step을 소개하고 있다.<br><a href="https://pages.github.com/" target="_blank" rel="noopener">https://pages.github.com/</a></p><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><p>root 디렉토리에 index.html 파일을 생성</p><p>$ cd username.github.io<br>$ echo “Hello World” &gt; index.html</p><h3 id="Push-it"><a href="#Push-it" class="headerlink" title="Push it"></a>Push it</h3><p>Remote 저장소에 변경내역을 Push 한다</p><p>$ git add –all<br>$ git commit -m “Initial commit”<br>$ git push -u origin master</p><h3 id="It’s-done"><a href="#It’s-done" class="headerlink" title="It’s done!"></a>It’s done!</h3><p>아주 손쉽게 여러분의 웹페이지를 하나 만들었다. 이제는 브라우저에서 정상적으로 <a href="https://USERNAME.github.io" target="_blank" rel="noopener">https://USERNAME.github.io</a> 에 접속되는지 확인 한다.</p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><p>Hexo는 Jekyll와 함께 대표적으로 정적 페이지를 쉽게 만들 수 있도록 도와주는 서비스이다. 두 서비스 역시 블로그 지향적인 서비스이며 Hexo의 경우에는 npm을 통해 쉽게 설치가 가능하고 한 줄의 Command Line을 통해 Github에 바로 배포 할 수 있으며, Jekyll과 마찬가지로 다양한 플러그인과 테마를 지원하고 있다</p><p>A fast, simple &amp; powerful blog framework</p><h3 id="설치-전-준비"><a href="#설치-전-준비" class="headerlink" title="설치 전 준비"></a>설치 전 준비</h3><p>Hexo를 이용하기 위해서는 먼저 아래의 구성 요소들이 사전에 설치가 되어 있어야 한다. 이미 설치가 되어 있다면 생략해도 좋다.</p><p>Node.js<br>Git</p><h3 id="Hexo-CLI-설치-및-블로그-생성"><a href="#Hexo-CLI-설치-및-블로그-생성" class="headerlink" title="Hexo CLI 설치 및 블로그 생성"></a>Hexo CLI 설치 및 블로그 생성</h3><p>$ npm install hexo-cli -g<br>$ hexo init blog<br>$ cd blog<br>$ npm install</p><h3 id="설정파일-업데이트"><a href="#설정파일-업데이트" class="headerlink" title="설정파일 업데이트"></a>설정파일 업데이트</h3><p>Command Line을 통해 Hexo를 설치하고 블로그 생성이 완료가 되면 root 디렉토리에 _config.yml 이라는 설정파일이 생성이 되는데 이 곳에 블로그에 대한 대부분의 설정을 할 수 있다. 이 중 중요한 설정 요소들을 소개하도록 하겠다. 나머지 설정 값에 대한 자세한 정보는 Hexo의 Document를 통해 확인이 가능하다.</p><p>Documentation - <a href="https://hexo.io/docs/" target="_blank" rel="noopener">https://hexo.io/docs/</a></p><h3 id="Site-정보"><a href="#Site-정보" class="headerlink" title="Site 정보"></a>Site 정보</h3><p>블로그의 이름과 간략한 소개등을 수정 할 수 있다</p><p>title: 안녕 프로그래밍<br>subtitle: 모두가 프로그래밍에서 자유로워지는 그 날까지<br>description:<br>author: Minhyeok Jung</p><h3 id="URL-정보"><a href="#URL-정보" class="headerlink" title="URL 정보"></a>URL 정보</h3><p>블로그 URL정보를 설정 할 수 있다</p><p>url: <a href="https://USERNAME.github.io" target="_blank" rel="noopener">https://USERNAME.github.io</a><br>root: /<br>permalink: :year/:month/:day/:title/<br>permalink_defaults:<br>만약 본인의 Custom Domain을 적용하고 싶다면 url값은 이후에 Custom Domain 설정시 CNAME 파일을 생성 할 때도 참조한다.</p><h3 id="Github-정보"><a href="#Github-정보" class="headerlink" title="Github 정보"></a>Github 정보</h3><p>자신의 Git Page의 Repository 정보를 입력하면 이후에 손쉽게 배포가 가능하다.</p><h1 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h1><p>deploy:<br>  type: git<br>  repo: <a href="https://stunstunstun@github.com/holaxapps/holaxapps.github.io" target="_blank" rel="noopener">https://stunstunstun@github.com/holaxapps/holaxapps.github.io</a></p><h1 id="로컬에서-테스트"><a href="#로컬에서-테스트" class="headerlink" title="로컬에서 테스트"></a>로컬에서 테스트</h1><p>기본적인 설정이 완료가 되면 아래의 Command Line을 통해 로컬에서 서버를 구동 할 수 있다.</p><p>$ hexo server<br>서버가 구동이 되면 아래의 주소를 통해 브라우저에서 블로그에 접속 할 수 있다.</p><p><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><h1 id="Github에-배포하기"><a href="#Github에-배포하기" class="headerlink" title="Github에 배포하기"></a>Github에 배포하기</h1><p>로컬에서 정상적으로 블로그에 접속이 되었다면 이미 생성한 Github Page Repository에 손쉽게 배포가 가능하다.</p><h3 id="Hexo-설정을-통해-정적-리소스-생성하기"><a href="#Hexo-설정을-통해-정적-리소스-생성하기" class="headerlink" title="Hexo 설정을 통해 정적 리소스 생성하기"></a>Hexo 설정을 통해 정적 리소스 생성하기</h3><p>$ hexo generate</p><h3 id="배포하기"><a href="#배포하기" class="headerlink" title="배포하기"></a>배포하기</h3><p>$ hexo deploy</p><h3 id="아래와-같이-Generate와-Deploy를-동시에-실행-할-수도-있다"><a href="#아래와-같이-Generate와-Deploy를-동시에-실행-할-수도-있다" class="headerlink" title="아래와 같이 Generate와 Deploy를 동시에 실행 할 수도 있다"></a>아래와 같이 Generate와 Deploy를 동시에 실행 할 수도 있다</h3><p>$ hexo deploy –generate<br>배포가 완료가 되면 브라우저에서 USERNAME.github.io로 접속해 정상적으로 배포가 되었는지 확인한다.</p><h3 id="주의사항"><a href="#주의사항" class="headerlink" title="주의사항"></a>주의사항</h3><p>간혹 hexo의 deploy기능을 통해 정상적으로 배포가 되었음에도 불구하고 페이지가 업데이트 되지 않는 현상이 있는데, 이 경우에는 아래와 같이 페이지를 clean후에 배포를 하면 해결된다.</p><p>$ hexo clean<br>$ hexo deploy –generate</p><h1 id="테마-적용하기"><a href="#테마-적용하기" class="headerlink" title="테마 적용하기"></a>테마 적용하기</h1><p>USERNAME.github.io를 통해 성공적으로 블로그 접속이 되었다면, 멋진 디자인을 적용한 테마(Theme)를 적용하고 싶을 것이다. Hexo에서는 아래의 페이지에서 다양한 Theme가 적용된 페이지를 소개하고 있다.</p><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p><p>대부분의 Theme 페이지에서는 Github 링크가 포함되어 있는데 Theme를 적용하기 위한 자세한 설명을 포함하고 있다. 안녕 프로그래밍은 자체 제작한 hexo-theme-chiangmai 라는 Theme를 사용하고 있다.</p><p><a href="https://github.com/stunstunstun/hexo-theme-chiangmai" target="_blank" rel="noopener">https://github.com/stunstunstun/hexo-theme-chiangmai</a></p><p>Theme를 적용하기 위해서는 hexo-theme-chiangmai Github 페이지에서 자세한 내용을 확인 할 수 있다. 주의사항으로는 Theme를 적용하기 위해서는 아래와 같이 Repository 상태를 clean한 이후에 재배포 해야만 한다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo deploy --generate</span><br></pre></td></tr></table></figure></p><h3 id="새-포스트-만들기"><a href="#새-포스트-만들기" class="headerlink" title="새 포스트 만들기"></a>새 포스트 만들기</h3><p>$ hexo new post [post_name]</p><h3 id="예제"><a href="#예제" class="headerlink" title="예제"></a>예제</h3><p>$ hexo new post github-page-and-hexo</p><h3 id="아래와-같은-경로에-Markdown-문서가-생성-된다"><a href="#아래와-같은-경로에-Markdown-문서가-생성-된다" class="headerlink" title="아래와 같은 경로에 Markdown 문서가 생성 된다"></a>아래와 같은 경로에 Markdown 문서가 생성 된다</h3><p>ㄴ source<br>   ㄴ _posts</p><pre><code>- github-page-and-hexo.md</code></pre><h3 id="github-page-and-hexo-md-에서-아래와-같이-포스트의-제목을-수정-할-수-있다"><a href="#github-page-and-hexo-md-에서-아래와-같이-포스트의-제목을-수정-할-수-있다" class="headerlink" title="github-page-and-hexo.md 에서 아래와 같이 포스트의 제목을 수정 할 수 있다"></a>github-page-and-hexo.md 에서 아래와 같이 포스트의 제목을 수정 할 수 있다</h3><hr><p>title: Github Page와 Hexo를 통해 30분만에 기술 블로그 만들기</p><h2 id="date-2017-04-16-22-37-53"><a href="#date-2017-04-16-22-37-53" class="headerlink" title="date: 2017-04-16 22:37:53"></a>date: 2017-04-16 22:37:53</h2><p>Github Markdown Guide<br>Markdown 문서가 생소하다면 아래의 링크를 확인하자</p><p><a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="noopener">https://guides.github.com/features/mastering-markdown/</a></p><h1 id="체크리스트"><a href="#체크리스트" class="headerlink" title="체크리스트"></a>체크리스트</h1><p>지금까지 GitHub Page와 Hexo를 통해서 블로그를 개설하는 과정을 살펴보았는데요, 이 과정에서 소소한 시행 착오를 겪었습니다. 만약 저와 같은 동일한 이슈가 재현이 됐을 때의 해결 방법을 안내하는 것을 마지막으로 이 글을 마치도록 할께요.</p><h3 id="Theme를-변경하고-배포시에-적용이-되지-않는-이슈"><a href="#Theme를-변경하고-배포시에-적용이-되지-않는-이슈" class="headerlink" title="Theme를 변경하고 배포시에 적용이 되지 않는 이슈"></a>Theme를 변경하고 배포시에 적용이 되지 않는 이슈</h3><p>이 경우에는 Hexo를 clean 하고 재배포를 합니다.</p><p>$ hexo clean<br>$ hexo deploy –generate</p><h3 id="배포시에-아래와-같은-에러메세지와-함께-배포가-되지-않는-이슈"><a href="#배포시에-아래와-같은-에러메세지와-함께-배포가-되지-않는-이슈" class="headerlink" title="배포시에 아래와 같은 에러메세지와 함께 배포가 되지 않는 이슈"></a>배포시에 아래와 같은 에러메세지와 함께 배포가 되지 않는 이슈</h3><p>ERROR Deployer not found: git<br>hexo-deployer-git 플러그인 설치</p><p>npm install hexo-deployer-git –save<br>_config.yml에 플러그인 설정</p><p>plugins:</p><ul><li>hexo-deployer-git</li></ul><p>본 내용은 하기 링크로부터 참조 되었습니다.<br><a href="https://www.holaxprogramming.com/2017/04/16/github-page-and-hexo/" target="_blank" rel="noopener">https://www.holaxprogramming.com/2017/04/16/github-page-and-hexo/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#Git Page로 정적 페이지 Hosting하기&lt;br&gt;Git Page를 통해 손쉽게 USERNAME.github.io 도메인을 통해 정적 페이지를 호스팅(Hosting) 할 수가 있습니다.&lt;/p&gt;
&lt;h3 id=&quot;Github-Repository-
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>코틀린 Week1-Syntax</title>
    <link href="https://shin-beomchul.github.io/2018/01/23/hex-kotlin/kt-01-Syntax/"/>
    <id>https://shin-beomchul.github.io/2018/01/23/hex-kotlin/kt-01-Syntax/</id>
    <published>2018-01-23T13:49:59.000Z</published>
    <updated>2018-05-17T02:12:32.800Z</updated>
    
    <content type="html"><![CDATA[<p>#널 안전성</p><h1 id="가변-불변"><a href="#가변-불변" class="headerlink" title="가변 불변"></a>가변 불변</h1><p>val == final int<br>var == int </p><h1 id="콜렉션-가변-불변"><a href="#콜렉션-가변-불변" class="headerlink" title="콜렉션 가변 불변"></a>콜렉션 가변 불변</h1><p>콜렉션의 가변/ 불변 여부는 인터페이스에 따라 구분.<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//수정 불가 콜렉션</span></span><br><span class="line"><span class="keyword">val</span> myListInstance : List&lt;String&gt; =listOf(<span class="string">"god"</span>,<span class="string">"beom"</span>,<span class="string">"chul"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//수정 가능 콜렉션</span></span><br><span class="line"><span class="keyword">val</span> myListInstance : MutableList&lt;String&gt; =listOf(<span class="string">"god"</span>,<span class="string">"beom"</span>,<span class="string">"chul"</span>)</span><br></pre></td></tr></table></figure></p><h1 id="SAM-단일-함수형-인터페이스"><a href="#SAM-단일-함수형-인터페이스" class="headerlink" title="SAM == 단일 함수형 인터페이스"></a>SAM == 단일 함수형 인터페이스</h1><p>-람다</p><h1 id="스트림-API-지원"><a href="#스트림-API-지원" class="headerlink" title="스트림 API 지원"></a>스트림 API 지원</h1><p> 스트림 &gt;= API26<br>  표준 라이브러리 == Any API<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> items = listOf(<span class="number">10</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line"><span class="keyword">val</span> filterAndSum = items.filter&#123;it % <span class="number">2</span> ==<span class="number">0</span>&#125;.sum()</span><br></pre></td></tr></table></figure></p><h1 id="값-및-변수-선언"><a href="#값-및-변수-선언" class="headerlink" title="값 및 변수 선언"></a>값 및 변수 선언</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//String 타입을 갖는 값 a선언</span></span><br><span class="line"> <span class="keyword">val</span> a:String = <span class="string">"foo"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//타입추론</span></span><br><span class="line">vaㅣ typleLess =<span class="string">"God"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//선언 시 value를 할당하지 않으면 타입 명시 해야함.(값으로 추론)</span></span><br><span class="line"><span class="keyword">val</span> b : String</span><br><span class="line">b=<span class="string">"beom"</span></span><br><span class="line">b=<span class="string">"Chul"</span> <span class="comment">//Error -&gt; Final ==val</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//var 변경 가능</span></span><br><span class="line"><span class="keyword">var</span> c : <span class="built_in">Int</span> =<span class="number">0</span></span><br><span class="line">c+=<span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="함수-선언"><a href="#함수-선언" class="headerlink" title="함수 선언"></a>함수 선언</h1><p>Unit == void<br>Unit 생략 가능<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">HelloPrinter</span><span class="params">(name:<span class="type">String</span>)</span></span> :<span class="built_in">Unit</span>&#123;</span><br><span class="line">    println(<span class="string">"Hello, <span class="variable">$name</span> !!"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">HelloPrinter</span><span class="params">(name:<span class="type">String</span>)</span></span>&#123;</span><br><span class="line">    println(<span class="string">"Hello, <span class="variable">$name</span> !!"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">sum</span><span class="params">(a:<span class="type">Int</span>, b:<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="클래스-및-인터페이스-선언"><a href="#클래스-및-인터페이스-선언" class="headerlink" title="클래스 및 인터페이스 선언"></a>클래스 및 인터페이스 선언</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**클래스*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> foo:String = <span class="string">"foo"</span> <span class="comment">// 멤버변수</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">foo</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**인터페이스*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">highOrder</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">filter</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="조건문"><a href="#조건문" class="headerlink" title="조건문"></a>조건문</h1><p> if == java if<br> -&gt; when Better</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">max</span><span class="params">(a:<span class="type">Int</span> , b:<span class="type">Int</span>)</span></span> :<span class="built_in">Int</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">     <span class="keyword">return</span> a</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="when"><a href="#when" class="headerlink" title="when"></a>when</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">NumberToString</span><span class="params">(number:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">when</span>(number)&#123;</span><br><span class="line">        <span class="number">1</span>-&gt; println(<span class="string">"일"</span>)</span><br><span class="line">        <span class="number">2</span>-&gt; println(<span class="string">"이"</span>)</span><br><span class="line">        <span class="keyword">else</span> -&gt; println(<span class="string">"1도 아니고 2도 아닌 값들입니다."</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 잘못된 코드</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">NumberToString</span><span class="params">(number)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">when</span>(number)&#123;</span><br><span class="line">        <span class="number">1</span>-&gt; println(<span class="string">"일"</span>)</span><br><span class="line">        <span class="number">2</span>-&gt; println(<span class="string">"이"</span>)</span><br><span class="line">        <span class="keyword">else</span> -&gt; println(<span class="string">"1도 아니고 2도 아닌 값들입니다."</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 타입을 추론 할 수 없음 선언과 동시에 value를 주던가, 타입을 명시해야 하기 때문</span></span><br></pre></td></tr></table></figure><h1 id="반복문"><a href="#반복문" class="headerlink" title="반복문"></a>반복문</h1><p>인덱스 기반 for문 지원하지 않음. Only for-each 만 지원<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">val</span> items = listOf(<span class="string">"god"</span>,<span class="string">"Beom"</span>,<span class="string">"Chul"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//for</span></span><br><span class="line">    <span class="keyword">for</span>(item <span class="keyword">in</span> items)&#123;</span><br><span class="line">        println(item)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//while</span></span><br><span class="line">    <span class="keyword">val</span> items = listOf(<span class="string">"god"</span>,<span class="string">"Beom"</span>,<span class="string">"Chul"</span>)</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">var</span> i =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; items.size)&#123;</span><br><span class="line">        println(items[i])</span><br><span class="line">        <span class="comment">//println("Hello ! $&#123;items[i]&#125;") // 스트링과 조합 REMIND_ME</span></span><br><span class="line">        <span class="comment">//println("Hello ! $items")    </span></span><br><span class="line">        </span><br><span class="line">        i++</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#널 안전성&lt;/p&gt;
&lt;h1 id=&quot;가변-불변&quot;&gt;&lt;a href=&quot;#가변-불변&quot; class=&quot;headerlink&quot; title=&quot;가변 불변&quot;&gt;&lt;/a&gt;가변 불변&lt;/h1&gt;&lt;p&gt;val == final int&lt;br&gt;var == int &lt;/p&gt;
&lt;h1 id=&quot;
      
    
    </summary>
    
    
      <category term="Kotlin" scheme="https://shin-beomchul.github.io/tags/Kotlin/"/>
    
  </entry>
  
</feed>
